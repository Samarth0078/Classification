{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Samarth0078/Classification/blob/main/Flight_price_prediction2.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Importing libraries,Reading and Understanding the Data**\n"
      ],
      "metadata": {
        "id": "J0ZzwRkyTKwl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import streamlit as st\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.neighbors import KNeighborsRegressor\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.tree import DecisionTreeRegressor\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn.svm import SVR\n",
        "from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n",
        "from sklearn.model_selection import RandomizedSearchCV\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "HQr2DPiHTLq4"
      },
      "execution_count": 197,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 198,
      "metadata": {
        "id": "-pq1akv1OAON"
      },
      "outputs": [],
      "source": [
        "import warnings\n",
        "warnings.filterwarnings('ignore')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 199,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "rOO_GTG4OAQi",
        "outputId": "121d5c28-e5d3-4632-ba02-876becd8c329"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Airline Date_of_Journey    Source Destination  \\\n",
              "0           IndiGo      24/03/2019  Banglore   New Delhi   \n",
              "1        Air India       1/05/2019   Kolkata    Banglore   \n",
              "2      Jet Airways       9/06/2019     Delhi      Cochin   \n",
              "3           IndiGo      12/05/2019   Kolkata    Banglore   \n",
              "4           IndiGo      01/03/2019  Banglore   New Delhi   \n",
              "...            ...             ...       ...         ...   \n",
              "10678     Air Asia       9/04/2019   Kolkata    Banglore   \n",
              "10679    Air India      27/04/2019   Kolkata    Banglore   \n",
              "10680  Jet Airways      27/04/2019  Banglore       Delhi   \n",
              "10681      Vistara      01/03/2019  Banglore   New Delhi   \n",
              "10682    Air India       9/05/2019     Delhi      Cochin   \n",
              "\n",
              "                       Route Dep_Time  Arrival_Time Duration Total_Stops  \\\n",
              "0                  BLR → DEL    22:20  01:10 22 Mar   2h 50m    non-stop   \n",
              "1      CCU → IXR → BBI → BLR    05:50         13:15   7h 25m     2 stops   \n",
              "2      DEL → LKO → BOM → COK    09:25  04:25 10 Jun      19h     2 stops   \n",
              "3            CCU → NAG → BLR    18:05         23:30   5h 25m      1 stop   \n",
              "4            BLR → NAG → DEL    16:50         21:35   4h 45m      1 stop   \n",
              "...                      ...      ...           ...      ...         ...   \n",
              "10678              CCU → BLR    19:55         22:25   2h 30m    non-stop   \n",
              "10679              CCU → BLR    20:45         23:20   2h 35m    non-stop   \n",
              "10680              BLR → DEL    08:20         11:20       3h    non-stop   \n",
              "10681              BLR → DEL    11:30         14:10   2h 40m    non-stop   \n",
              "10682  DEL → GOI → BOM → COK    10:55         19:15   8h 20m     2 stops   \n",
              "\n",
              "      Additional_Info  Price  \n",
              "0             No info   3897  \n",
              "1             No info   7662  \n",
              "2             No info  13882  \n",
              "3             No info   6218  \n",
              "4             No info  13302  \n",
              "...               ...    ...  \n",
              "10678         No info   4107  \n",
              "10679         No info   4145  \n",
              "10680         No info   7229  \n",
              "10681         No info  12648  \n",
              "10682         No info  11753  \n",
              "\n",
              "[10683 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0c9c9591-f159-46fc-bc22-73284cb5c392\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Airline</th>\n",
              "      <th>Date_of_Journey</th>\n",
              "      <th>Source</th>\n",
              "      <th>Destination</th>\n",
              "      <th>Route</th>\n",
              "      <th>Dep_Time</th>\n",
              "      <th>Arrival_Time</th>\n",
              "      <th>Duration</th>\n",
              "      <th>Total_Stops</th>\n",
              "      <th>Additional_Info</th>\n",
              "      <th>Price</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>24/03/2019</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → DEL</td>\n",
              "      <td>22:20</td>\n",
              "      <td>01:10 22 Mar</td>\n",
              "      <td>2h 50m</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>3897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Air India</td>\n",
              "      <td>1/05/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → IXR → BBI → BLR</td>\n",
              "      <td>05:50</td>\n",
              "      <td>13:15</td>\n",
              "      <td>7h 25m</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>7662</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>9/06/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → LKO → BOM → COK</td>\n",
              "      <td>09:25</td>\n",
              "      <td>04:25 10 Jun</td>\n",
              "      <td>19h</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>13882</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>12/05/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → NAG → BLR</td>\n",
              "      <td>18:05</td>\n",
              "      <td>23:30</td>\n",
              "      <td>5h 25m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>6218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>01/03/2019</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → NAG → DEL</td>\n",
              "      <td>16:50</td>\n",
              "      <td>21:35</td>\n",
              "      <td>4h 45m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>13302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10678</th>\n",
              "      <td>Air Asia</td>\n",
              "      <td>9/04/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → BLR</td>\n",
              "      <td>19:55</td>\n",
              "      <td>22:25</td>\n",
              "      <td>2h 30m</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>4107</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10679</th>\n",
              "      <td>Air India</td>\n",
              "      <td>27/04/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → BLR</td>\n",
              "      <td>20:45</td>\n",
              "      <td>23:20</td>\n",
              "      <td>2h 35m</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>4145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10680</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>27/04/2019</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>BLR → DEL</td>\n",
              "      <td>08:20</td>\n",
              "      <td>11:20</td>\n",
              "      <td>3h</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>7229</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10681</th>\n",
              "      <td>Vistara</td>\n",
              "      <td>01/03/2019</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → DEL</td>\n",
              "      <td>11:30</td>\n",
              "      <td>14:10</td>\n",
              "      <td>2h 40m</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>12648</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10682</th>\n",
              "      <td>Air India</td>\n",
              "      <td>9/05/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → GOI → BOM → COK</td>\n",
              "      <td>10:55</td>\n",
              "      <td>19:15</td>\n",
              "      <td>8h 20m</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>11753</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10683 rows × 11 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c9c9591-f159-46fc-bc22-73284cb5c392')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0c9c9591-f159-46fc-bc22-73284cb5c392 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0c9c9591-f159-46fc-bc22-73284cb5c392');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c638b677-51c5-452c-8559-09ae34fb2bd4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c638b677-51c5-452c-8559-09ae34fb2bd4')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c638b677-51c5-452c-8559-09ae34fb2bd4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 199
        }
      ],
      "source": [
        "# Reading the dataset\n",
        "df=pd.read_csv(\"/content/drive/MyDrive/Datasets/Data_Train.csv\")\n",
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 200,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "5pfQgCWrOASy",
        "outputId": "a72cb990-1a36-45cf-c109-800d10ba89fe"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Airline Date_of_Journey    Source Destination  \\\n",
              "0              IndiGo      24/03/2019  Banglore   New Delhi   \n",
              "1           Air India       1/05/2019   Kolkata    Banglore   \n",
              "2         Jet Airways       9/06/2019     Delhi      Cochin   \n",
              "3              IndiGo      12/05/2019   Kolkata    Banglore   \n",
              "4              IndiGo      01/03/2019  Banglore   New Delhi   \n",
              "5            SpiceJet      24/06/2019   Kolkata    Banglore   \n",
              "6         Jet Airways      12/03/2019  Banglore   New Delhi   \n",
              "7         Jet Airways      01/03/2019  Banglore   New Delhi   \n",
              "8         Jet Airways      12/03/2019  Banglore   New Delhi   \n",
              "9   Multiple carriers      27/05/2019     Delhi      Cochin   \n",
              "10          Air India       1/06/2019     Delhi      Cochin   \n",
              "11             IndiGo      18/04/2019   Kolkata    Banglore   \n",
              "12          Air India      24/06/2019   Chennai     Kolkata   \n",
              "13        Jet Airways       9/05/2019   Kolkata    Banglore   \n",
              "14             IndiGo      24/04/2019   Kolkata    Banglore   \n",
              "15          Air India       3/03/2019     Delhi      Cochin   \n",
              "16           SpiceJet      15/04/2019     Delhi      Cochin   \n",
              "17        Jet Airways      12/06/2019     Delhi      Cochin   \n",
              "18          Air India      12/06/2019     Delhi      Cochin   \n",
              "19        Jet Airways      27/05/2019     Delhi      Cochin   \n",
              "\n",
              "                    Route Dep_Time  Arrival_Time Duration Total_Stops  \\\n",
              "0               BLR → DEL    22:20  01:10 22 Mar   2h 50m    non-stop   \n",
              "1   CCU → IXR → BBI → BLR    05:50         13:15   7h 25m     2 stops   \n",
              "2   DEL → LKO → BOM → COK    09:25  04:25 10 Jun      19h     2 stops   \n",
              "3         CCU → NAG → BLR    18:05         23:30   5h 25m      1 stop   \n",
              "4         BLR → NAG → DEL    16:50         21:35   4h 45m      1 stop   \n",
              "5               CCU → BLR    09:00         11:25   2h 25m    non-stop   \n",
              "6         BLR → BOM → DEL    18:55  10:25 13 Mar  15h 30m      1 stop   \n",
              "7         BLR → BOM → DEL    08:00  05:05 02 Mar   21h 5m      1 stop   \n",
              "8         BLR → BOM → DEL    08:55  10:25 13 Mar  25h 30m      1 stop   \n",
              "9         DEL → BOM → COK    11:25         19:15   7h 50m      1 stop   \n",
              "10        DEL → BLR → COK    09:45         23:00  13h 15m      1 stop   \n",
              "11              CCU → BLR    20:20         22:55   2h 35m    non-stop   \n",
              "12              MAA → CCU    11:40         13:55   2h 15m    non-stop   \n",
              "13        CCU → BOM → BLR    21:10  09:20 10 May  12h 10m      1 stop   \n",
              "14              CCU → BLR    17:15         19:50   2h 35m    non-stop   \n",
              "15  DEL → AMD → BOM → COK    16:40  19:15 04 Mar  26h 35m     2 stops   \n",
              "16        DEL → PNQ → COK    08:45         13:15   4h 30m      1 stop   \n",
              "17        DEL → BOM → COK    14:00  12:35 13 Jun  22h 35m      1 stop   \n",
              "18  DEL → CCU → BOM → COK    20:15  19:15 13 Jun      23h     2 stops   \n",
              "19        DEL → BOM → COK    16:00  12:35 28 May  20h 35m      1 stop   \n",
              "\n",
              "                Additional_Info  Price  \n",
              "0                       No info   3897  \n",
              "1                       No info   7662  \n",
              "2                       No info  13882  \n",
              "3                       No info   6218  \n",
              "4                       No info  13302  \n",
              "5                       No info   3873  \n",
              "6   In-flight meal not included  11087  \n",
              "7                       No info  22270  \n",
              "8   In-flight meal not included  11087  \n",
              "9                       No info   8625  \n",
              "10                      No info   8907  \n",
              "11                      No info   4174  \n",
              "12                      No info   4667  \n",
              "13  In-flight meal not included   9663  \n",
              "14                      No info   4804  \n",
              "15                      No info  14011  \n",
              "16                      No info   5830  \n",
              "17  In-flight meal not included  10262  \n",
              "18                      No info  13381  \n",
              "19  In-flight meal not included  12898  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1de90efa-da60-42b3-a2bd-72da32480ec7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Airline</th>\n",
              "      <th>Date_of_Journey</th>\n",
              "      <th>Source</th>\n",
              "      <th>Destination</th>\n",
              "      <th>Route</th>\n",
              "      <th>Dep_Time</th>\n",
              "      <th>Arrival_Time</th>\n",
              "      <th>Duration</th>\n",
              "      <th>Total_Stops</th>\n",
              "      <th>Additional_Info</th>\n",
              "      <th>Price</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>24/03/2019</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → DEL</td>\n",
              "      <td>22:20</td>\n",
              "      <td>01:10 22 Mar</td>\n",
              "      <td>2h 50m</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>3897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Air India</td>\n",
              "      <td>1/05/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → IXR → BBI → BLR</td>\n",
              "      <td>05:50</td>\n",
              "      <td>13:15</td>\n",
              "      <td>7h 25m</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>7662</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>9/06/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → LKO → BOM → COK</td>\n",
              "      <td>09:25</td>\n",
              "      <td>04:25 10 Jun</td>\n",
              "      <td>19h</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>13882</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>12/05/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → NAG → BLR</td>\n",
              "      <td>18:05</td>\n",
              "      <td>23:30</td>\n",
              "      <td>5h 25m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>6218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>01/03/2019</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → NAG → DEL</td>\n",
              "      <td>16:50</td>\n",
              "      <td>21:35</td>\n",
              "      <td>4h 45m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>13302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>SpiceJet</td>\n",
              "      <td>24/06/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → BLR</td>\n",
              "      <td>09:00</td>\n",
              "      <td>11:25</td>\n",
              "      <td>2h 25m</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>3873</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>12/03/2019</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → BOM → DEL</td>\n",
              "      <td>18:55</td>\n",
              "      <td>10:25 13 Mar</td>\n",
              "      <td>15h 30m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>In-flight meal not included</td>\n",
              "      <td>11087</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>01/03/2019</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → BOM → DEL</td>\n",
              "      <td>08:00</td>\n",
              "      <td>05:05 02 Mar</td>\n",
              "      <td>21h 5m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>22270</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>12/03/2019</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → BOM → DEL</td>\n",
              "      <td>08:55</td>\n",
              "      <td>10:25 13 Mar</td>\n",
              "      <td>25h 30m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>In-flight meal not included</td>\n",
              "      <td>11087</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Multiple carriers</td>\n",
              "      <td>27/05/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → BOM → COK</td>\n",
              "      <td>11:25</td>\n",
              "      <td>19:15</td>\n",
              "      <td>7h 50m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>8625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Air India</td>\n",
              "      <td>1/06/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → BLR → COK</td>\n",
              "      <td>09:45</td>\n",
              "      <td>23:00</td>\n",
              "      <td>13h 15m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>8907</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>18/04/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → BLR</td>\n",
              "      <td>20:20</td>\n",
              "      <td>22:55</td>\n",
              "      <td>2h 35m</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>4174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Air India</td>\n",
              "      <td>24/06/2019</td>\n",
              "      <td>Chennai</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>MAA → CCU</td>\n",
              "      <td>11:40</td>\n",
              "      <td>13:55</td>\n",
              "      <td>2h 15m</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>4667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>9/05/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → BOM → BLR</td>\n",
              "      <td>21:10</td>\n",
              "      <td>09:20 10 May</td>\n",
              "      <td>12h 10m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>In-flight meal not included</td>\n",
              "      <td>9663</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>24/04/2019</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → BLR</td>\n",
              "      <td>17:15</td>\n",
              "      <td>19:50</td>\n",
              "      <td>2h 35m</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>4804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Air India</td>\n",
              "      <td>3/03/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → AMD → BOM → COK</td>\n",
              "      <td>16:40</td>\n",
              "      <td>19:15 04 Mar</td>\n",
              "      <td>26h 35m</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>14011</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>SpiceJet</td>\n",
              "      <td>15/04/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → PNQ → COK</td>\n",
              "      <td>08:45</td>\n",
              "      <td>13:15</td>\n",
              "      <td>4h 30m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>5830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>12/06/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → BOM → COK</td>\n",
              "      <td>14:00</td>\n",
              "      <td>12:35 13 Jun</td>\n",
              "      <td>22h 35m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>In-flight meal not included</td>\n",
              "      <td>10262</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Air India</td>\n",
              "      <td>12/06/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → CCU → BOM → COK</td>\n",
              "      <td>20:15</td>\n",
              "      <td>19:15 13 Jun</td>\n",
              "      <td>23h</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>13381</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>27/05/2019</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → BOM → COK</td>\n",
              "      <td>16:00</td>\n",
              "      <td>12:35 28 May</td>\n",
              "      <td>20h 35m</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>In-flight meal not included</td>\n",
              "      <td>12898</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1de90efa-da60-42b3-a2bd-72da32480ec7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1de90efa-da60-42b3-a2bd-72da32480ec7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1de90efa-da60-42b3-a2bd-72da32480ec7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7ed5a67c-fe98-48e6-a6e7-af0eadfe69cd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ed5a67c-fe98-48e6-a6e7-af0eadfe69cd')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7ed5a67c-fe98-48e6-a6e7-af0eadfe69cd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 200
        }
      ],
      "source": [
        "#Understand the data\n",
        "df.head(20)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 201,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0JaFm551OAUw",
        "outputId": "75e1120e-8348-4181-b62c-aab533e21298"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10683, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 201
        }
      ],
      "source": [
        "#Checking the shape of the data\n",
        "df.shape"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "llqjMINFPThA"
      },
      "source": [
        "**2.Data Cleaning**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 202,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HP4rVZKOOAXU",
        "outputId": "1fb03e00-3392-4120-e8ac-ae011e5d60be"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Airline            0\n",
              "Date_of_Journey    0\n",
              "Source             0\n",
              "Destination        0\n",
              "Route              1\n",
              "Dep_Time           0\n",
              "Arrival_Time       0\n",
              "Duration           0\n",
              "Total_Stops        1\n",
              "Additional_Info    0\n",
              "Price              0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 202
        }
      ],
      "source": [
        "# Display the count of missing values\n",
        "df.isna().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 203,
      "metadata": {
        "id": "zxPQnbaeOAbY"
      },
      "outputs": [],
      "source": [
        "df.dropna(inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 204,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HbIU21cuOAeI",
        "outputId": "6b6816ca-9520-4d17-ba3e-9ac2f6a2a604"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Airline            0\n",
              "Date_of_Journey    0\n",
              "Source             0\n",
              "Destination        0\n",
              "Route              0\n",
              "Dep_Time           0\n",
              "Arrival_Time       0\n",
              "Duration           0\n",
              "Total_Stops        0\n",
              "Additional_Info    0\n",
              "Price              0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 204
        }
      ],
      "source": [
        "# Display the count of missing values\n",
        "df.isna().sum()\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DA9P84lthFo4",
        "outputId": "3a313dbd-a0b3-4708-9622-bc6b5df6d274"
      },
      "execution_count": 205,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Airline            object\n",
              "Date_of_Journey    object\n",
              "Source             object\n",
              "Destination        object\n",
              "Route              object\n",
              "Dep_Time           object\n",
              "Arrival_Time       object\n",
              "Duration           object\n",
              "Total_Stops        object\n",
              "Additional_Info    object\n",
              "Price               int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 205
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 206,
      "metadata": {
        "id": "59v6XwxhOAgW"
      },
      "outputs": [],
      "source": [
        "# Convert the 'Date_of_Journey' column to datetime\n",
        "df['Date_of_Journey'] = pd.to_datetime(df['Date_of_Journey'], format='%d/%m/%Y')\n",
        "# Extract the day and month components\n",
        "df['Journey_Day'] = df['Date_of_Journey'].dt.day\n",
        "df['Journey_Month'] = df['Date_of_Journey'].dt.month\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 207,
      "metadata": {
        "id": "0_l-c7RPOAiT"
      },
      "outputs": [],
      "source": [
        "# Drop the original 'Date_of_Journey' column\n",
        "df =df.drop(['Date_of_Journey'], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 208,
      "metadata": {
        "id": "F9LXBKm5UM-z"
      },
      "outputs": [],
      "source": [
        "# Extracting Hours\n",
        "df['dep_hour'] = pd.to_datetime(df['Dep_Time']).dt.hour\n",
        "# Extracting Minutes\n",
        "df['dep_minute'] = pd.to_datetime(df['Dep_Time']).dt.minute\n",
        "# Now we drop Dep_time as it is of no use\n",
        "df.drop(['Dep_Time'],axis=1,inplace=True)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 209,
      "metadata": {
        "id": "TeI4y4bJc2hG"
      },
      "outputs": [],
      "source": [
        "# Extracting Hours\n",
        "df['Arrival_hour'] = pd.to_datetime(df['Arrival_Time']).dt.hour\n",
        "# Extracting Minutes\n",
        "df['Arrival_minute'] = pd.to_datetime(df['Arrival_Time']).dt.minute\n",
        "# Now we drop Dep_time as it is of no use\n",
        "df.drop(['Arrival_Time'],axis=1,inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 210,
      "metadata": {
        "id": "A8v2EcyhOAkY"
      },
      "outputs": [],
      "source": [
        "# Extract Hours and Minutes from Duration\n",
        "df['Duration_hours'] = df['Duration'].str.extract(r'(\\d+)h').astype(float).fillna(0)\n",
        "df['Duration_minutes'] = df['Duration'].str.extract(r'(\\d+)m').astype(float).fillna(0)\n",
        "# Drop the original 'Duration' column\n",
        "df = df.drop('Duration', axis=1)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 211,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 608
        },
        "id": "5MPty2qpOAmX",
        "outputId": "b842b621-f6ef-48f9-f2ff-b34e2be595c7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Airline    Source Destination                  Route Total_Stops  \\\n",
              "0       IndiGo  Banglore   New Delhi              BLR → DEL    non-stop   \n",
              "1    Air India   Kolkata    Banglore  CCU → IXR → BBI → BLR     2 stops   \n",
              "2  Jet Airways     Delhi      Cochin  DEL → LKO → BOM → COK     2 stops   \n",
              "3       IndiGo   Kolkata    Banglore        CCU → NAG → BLR      1 stop   \n",
              "4       IndiGo  Banglore   New Delhi        BLR → NAG → DEL      1 stop   \n",
              "\n",
              "  Additional_Info  Price  Journey_Day  Journey_Month  dep_hour  dep_minute  \\\n",
              "0         No info   3897           24              3        22          20   \n",
              "1         No info   7662            1              5         5          50   \n",
              "2         No info  13882            9              6         9          25   \n",
              "3         No info   6218           12              5        18           5   \n",
              "4         No info  13302            1              3        16          50   \n",
              "\n",
              "   Arrival_hour  Arrival_minute  Duration_hours  Duration_minutes  \n",
              "0             1              10             2.0              50.0  \n",
              "1            13              15             7.0              25.0  \n",
              "2             4              25            19.0               0.0  \n",
              "3            23              30             5.0              25.0  \n",
              "4            21              35             4.0              45.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9dfb2b95-4f55-4ee6-b8e7-86f53777c4ed\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Airline</th>\n",
              "      <th>Source</th>\n",
              "      <th>Destination</th>\n",
              "      <th>Route</th>\n",
              "      <th>Total_Stops</th>\n",
              "      <th>Additional_Info</th>\n",
              "      <th>Price</th>\n",
              "      <th>Journey_Day</th>\n",
              "      <th>Journey_Month</th>\n",
              "      <th>dep_hour</th>\n",
              "      <th>dep_minute</th>\n",
              "      <th>Arrival_hour</th>\n",
              "      <th>Arrival_minute</th>\n",
              "      <th>Duration_hours</th>\n",
              "      <th>Duration_minutes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → DEL</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>3897</td>\n",
              "      <td>24</td>\n",
              "      <td>3</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Air India</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → IXR → BBI → BLR</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>7662</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>50</td>\n",
              "      <td>13</td>\n",
              "      <td>15</td>\n",
              "      <td>7.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → LKO → BOM → COK</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>13882</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>25</td>\n",
              "      <td>4</td>\n",
              "      <td>25</td>\n",
              "      <td>19.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → NAG → BLR</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>6218</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>18</td>\n",
              "      <td>5</td>\n",
              "      <td>23</td>\n",
              "      <td>30</td>\n",
              "      <td>5.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → NAG → DEL</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>13302</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>16</td>\n",
              "      <td>50</td>\n",
              "      <td>21</td>\n",
              "      <td>35</td>\n",
              "      <td>4.0</td>\n",
              "      <td>45.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9dfb2b95-4f55-4ee6-b8e7-86f53777c4ed')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9dfb2b95-4f55-4ee6-b8e7-86f53777c4ed button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9dfb2b95-4f55-4ee6-b8e7-86f53777c4ed');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-39160eaa-3168-45d4-b50f-ef9f1725e4f6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-39160eaa-3168-45d4-b50f-ef9f1725e4f6')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-39160eaa-3168-45d4-b50f-ef9f1725e4f6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 211
        }
      ],
      "source": [
        "df.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**3.Exploratory Data Analysis(EDA)**"
      ],
      "metadata": {
        "id": "tqD8VTPU6Z_1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Replace values in the 'Destination' column\n",
        "df['Destination'] = df['Destination'].replace({'Delhi': 'New Delhi'})\n",
        "df['Source'] = df['Source'].replace({'Delhi': 'New Delhi'})\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "XTE8xEfmpXtL",
        "outputId": "7bd0eb5f-9f55-4ec4-9598-934196948cec"
      },
      "execution_count": 212,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Airline     Source Destination                  Route Total_Stops  \\\n",
              "0           IndiGo   Banglore   New Delhi              BLR → DEL    non-stop   \n",
              "1        Air India    Kolkata    Banglore  CCU → IXR → BBI → BLR     2 stops   \n",
              "2      Jet Airways  New Delhi      Cochin  DEL → LKO → BOM → COK     2 stops   \n",
              "3           IndiGo    Kolkata    Banglore        CCU → NAG → BLR      1 stop   \n",
              "4           IndiGo   Banglore   New Delhi        BLR → NAG → DEL      1 stop   \n",
              "...            ...        ...         ...                    ...         ...   \n",
              "10678     Air Asia    Kolkata    Banglore              CCU → BLR    non-stop   \n",
              "10679    Air India    Kolkata    Banglore              CCU → BLR    non-stop   \n",
              "10680  Jet Airways   Banglore   New Delhi              BLR → DEL    non-stop   \n",
              "10681      Vistara   Banglore   New Delhi              BLR → DEL    non-stop   \n",
              "10682    Air India  New Delhi      Cochin  DEL → GOI → BOM → COK     2 stops   \n",
              "\n",
              "      Additional_Info  Price  Journey_Day  Journey_Month  dep_hour  \\\n",
              "0             No info   3897           24              3        22   \n",
              "1             No info   7662            1              5         5   \n",
              "2             No info  13882            9              6         9   \n",
              "3             No info   6218           12              5        18   \n",
              "4             No info  13302            1              3        16   \n",
              "...               ...    ...          ...            ...       ...   \n",
              "10678         No info   4107            9              4        19   \n",
              "10679         No info   4145           27              4        20   \n",
              "10680         No info   7229           27              4         8   \n",
              "10681         No info  12648            1              3        11   \n",
              "10682         No info  11753            9              5        10   \n",
              "\n",
              "       dep_minute  Arrival_hour  Arrival_minute  Duration_hours  \\\n",
              "0              20             1              10             2.0   \n",
              "1              50            13              15             7.0   \n",
              "2              25             4              25            19.0   \n",
              "3               5            23              30             5.0   \n",
              "4              50            21              35             4.0   \n",
              "...           ...           ...             ...             ...   \n",
              "10678          55            22              25             2.0   \n",
              "10679          45            23              20             2.0   \n",
              "10680          20            11              20             3.0   \n",
              "10681          30            14              10             2.0   \n",
              "10682          55            19              15             8.0   \n",
              "\n",
              "       Duration_minutes  \n",
              "0                  50.0  \n",
              "1                  25.0  \n",
              "2                   0.0  \n",
              "3                  25.0  \n",
              "4                  45.0  \n",
              "...                 ...  \n",
              "10678              30.0  \n",
              "10679              35.0  \n",
              "10680               0.0  \n",
              "10681              40.0  \n",
              "10682              20.0  \n",
              "\n",
              "[10682 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1b932e21-81b4-4fc9-aa97-892b215034cd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Airline</th>\n",
              "      <th>Source</th>\n",
              "      <th>Destination</th>\n",
              "      <th>Route</th>\n",
              "      <th>Total_Stops</th>\n",
              "      <th>Additional_Info</th>\n",
              "      <th>Price</th>\n",
              "      <th>Journey_Day</th>\n",
              "      <th>Journey_Month</th>\n",
              "      <th>dep_hour</th>\n",
              "      <th>dep_minute</th>\n",
              "      <th>Arrival_hour</th>\n",
              "      <th>Arrival_minute</th>\n",
              "      <th>Duration_hours</th>\n",
              "      <th>Duration_minutes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → DEL</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>3897</td>\n",
              "      <td>24</td>\n",
              "      <td>3</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Air India</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → IXR → BBI → BLR</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>7662</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>50</td>\n",
              "      <td>13</td>\n",
              "      <td>15</td>\n",
              "      <td>7.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → LKO → BOM → COK</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>13882</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>25</td>\n",
              "      <td>4</td>\n",
              "      <td>25</td>\n",
              "      <td>19.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → NAG → BLR</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>6218</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>18</td>\n",
              "      <td>5</td>\n",
              "      <td>23</td>\n",
              "      <td>30</td>\n",
              "      <td>5.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>IndiGo</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → NAG → DEL</td>\n",
              "      <td>1 stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>13302</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>16</td>\n",
              "      <td>50</td>\n",
              "      <td>21</td>\n",
              "      <td>35</td>\n",
              "      <td>4.0</td>\n",
              "      <td>45.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10678</th>\n",
              "      <td>Air Asia</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → BLR</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>4107</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>19</td>\n",
              "      <td>55</td>\n",
              "      <td>22</td>\n",
              "      <td>25</td>\n",
              "      <td>2.0</td>\n",
              "      <td>30.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10679</th>\n",
              "      <td>Air India</td>\n",
              "      <td>Kolkata</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>CCU → BLR</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>4145</td>\n",
              "      <td>27</td>\n",
              "      <td>4</td>\n",
              "      <td>20</td>\n",
              "      <td>45</td>\n",
              "      <td>23</td>\n",
              "      <td>20</td>\n",
              "      <td>2.0</td>\n",
              "      <td>35.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10680</th>\n",
              "      <td>Jet Airways</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → DEL</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>7229</td>\n",
              "      <td>27</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>20</td>\n",
              "      <td>11</td>\n",
              "      <td>20</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10681</th>\n",
              "      <td>Vistara</td>\n",
              "      <td>Banglore</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>BLR → DEL</td>\n",
              "      <td>non-stop</td>\n",
              "      <td>No info</td>\n",
              "      <td>12648</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>30</td>\n",
              "      <td>14</td>\n",
              "      <td>10</td>\n",
              "      <td>2.0</td>\n",
              "      <td>40.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10682</th>\n",
              "      <td>Air India</td>\n",
              "      <td>New Delhi</td>\n",
              "      <td>Cochin</td>\n",
              "      <td>DEL → GOI → BOM → COK</td>\n",
              "      <td>2 stops</td>\n",
              "      <td>No info</td>\n",
              "      <td>11753</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>55</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "      <td>8.0</td>\n",
              "      <td>20.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10682 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b932e21-81b4-4fc9-aa97-892b215034cd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1b932e21-81b4-4fc9-aa97-892b215034cd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1b932e21-81b4-4fc9-aa97-892b215034cd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9864e3f8-8ccd-4de0-aa0a-4a94f37c4767\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9864e3f8-8ccd-4de0-aa0a-4a94f37c4767')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9864e3f8-8ccd-4de0-aa0a-4a94f37c4767 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 212
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "sns.barplot(data=df, x='Source', y='Price', hue='Destination')\n",
        "plt.title('Flight Price by Source and Destination')\n",
        "plt.xlabel('Source')\n",
        "plt.ylabel('Price')\n",
        "plt.xticks(rotation=90)\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "mvf1hSRb6b2j",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 620
        },
        "outputId": "9d66f51f-acbe-4f86-e876-36c4b1eca23b"
      },
      "execution_count": 213,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a bar plot to visualize the average price for each airline\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.barplot(x=\"Airline\", y=\"Price\", data=df)\n",
        "plt.xticks(rotation=90)\n",
        "plt.title(\"Average Price by Airline\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 797
        },
        "id": "0YuREhbn86C_",
        "outputId": "68514e12-a2db-4f34-f114-52aab2204acc"
      },
      "execution_count": 214,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "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5MiRw+Y43kl0dLQlR44clm+//da67emnn7a8/PLLacaWKlXKEhAQYP187ty5FkmWZ5991pKUlGQzNnVfRESEdVujRo0sjRo1sn7+888/WyRZKlWqZElISLBunzJlikWS5eDBgxaL5eZxLV++vMXf39/mGF+9etXi7e1tee655+75fQIAsi8u+wcAPPaCg4Pl5eWlJk2aSLp5OX6nTp20aNEiJScnS5KaNm2qQoUKafHixdav+/fff7Vx40Z16tTJum3p0qWqVKmSKlasqAsXLlgfTZs2lXTzEvNbNWrUSD4+Pmkyubm52bxObGysGjRooH379lm3p94i8MYbb9h87YABA2w+t1gsWrZsmV588UVZLBabXP7+/oqNjbV53jvZsGGDChcurMKFC6t69epaunSpunXrpk8//dRmXLt27VS4cOG7PldMTIy2bdumXr16qWTJkjb7HBwcMjW3r6+vatWqZf28ZMmSevnll7V+/Xrrf9/u3bsrISHB5taKxYsXKykpSa+++uo9X2PRokVydHRUu3btrNteeeUVrV27Vv/+++89v16SXn/99YeaE6Fnz542V6U0aNBAknTq1ClJUnh4uE6cOKEuXbron3/+sR7L+Ph4NWvWTNu2bWOFAgAwMS77BwA81pKTk7Vo0SI1adLEeu+6JNWrV09ffPGFNm/erObNmytHjhxq166dFixYoISEBLm4uGj58uW6ceOGTfk/ceKEjh49esfye/78eZvPvb290x23evVqffjhhwoPD7eZKyC1GEvS6dOn5ejomOY5bl+lICYmRpcuXdLMmTM1c+bM+8qVnnr16unDDz+Ug4ODcuXKpUqVKilfvnxpxt3pe7pVaiGtUqXKHcdkVu7y5cun2fbkk0/q6tWriomJUZEiRVSxYkXVqVNHwcHBCgwMlHTzTaH69evf16oP33//verWrat//vlH//zzjySpZs2aSkxM1NKlS9W7d+97Psf9HLe7uf1NlPz580uS9c2HEydOSJICAgLu+ByxsbHWrwMAmAvlHwDwWNuyZYvOnTunRYsWadGiRWn2BwcHq3nz5pKkzp0765tvvtHatWvVunVrLVmyRBUrVlT16tWt41NSUlS1alVNnDgx3dcrUaKEzee3nuFP9csvv+ill15Sw4YNNW3aNBUtWlQ5c+bU3LlztWDBggx/j6lnc1999dU7Fr9q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+fP12Wef6cSJE5KkJ598UsOGDeO2zTto27atunTpYv27rWXLlpKk3377TeXKlTM4nX27dOmSZs+ebf27o3LlyurVqxerNT1m7nzqDtnagQMHVKNGDTk6OurQoUP67bffbB6wNX78eA0bNkyHDh0yOgoeA8uWLVOVKlUUFham6tWrq3r16tq3b5+qVKmiZcuWGR3PLuXOndt6n3/RokX1xx9/WPdduHDBqFgwkZCQEFWuXFlvvfWWihYtqh49euiXX34xOpbdyp8/v86fPy9Jypcvn/Lnz5/mkbod6Zs4caL69u2r559/XkuWLNGSJUvUokUL9enTR5MmTTI6nl2aNGmS+vfvLx8fH23cuFF58uSRJJ07d05vvPGGwens1969e1W2bFlNmjRJFy9e1MWLFzVx4kSVLVuWW5keM1z2D4jJiu7Xl19+qd69e8vV1VVffvnlXccyS/GdlS1bVl27dtW4ceNsto8ePVrff/+9TbHFTa1bt1arVq30+uuv66233tJ///tf9ejRQ8uXL1f+/Pm1adMmoyPCJOLj47VkyRIFBQXpl19+Ubly5RQYGKiAgAAVKVLE6Hh2IyQkRM8884xy5MihkJCQu45t1KhRFqXKXry9vTV27Fh1797dZvu8efM0ZswY5gRApmnQoIHKlSunb7/9Vjly3LzwOykpSa+99ppOnTqlbdu2GZwQWYXybzJt27a95xgHBwfOLt5m3rx5d93PjPY3eXt7a+/evSpYsCCzFD+EXLly6cCBA2kuUTxx4oSqV6+uq1evGpTMfp06dUpXrlxRtWrVFB8frzfffFM7d+5U+fLlNXHiRJUqVcroiDChkydPau7cufruu+8UFRWlFi1a6McffzQ6VrZy6NAhlv+7A1dXVx06dCjd3wVVq1bV9evXDUpmv+bPn3/X/be/kYKb3Nzc9Ntvv6lixYo2248cOaLatWvzd8djhHv+TYb7dh4M5f7+3HoWgjMSD65x48bWM4q32r59uxo0aGBQKvt265r0uXPn1owZMwxMg8dFuXLl9M4776hUqVIaOXKk1qxZY3SkbOHy5ctauHChZs2apbCwMCaAvYNy5cppyZIleuedd2y2L168mDmI7mDQoEE2n9+4cUNXr16Vs7OzcuXKRfm/A3d3d0VGRqYp/2fOnGF+k8cM5d9k5s6da3SEbIPJih6No0ePavbs2fr888+NjmK3XnrpJY0YMUJhYWGqX7++JOnXX3/V0qVLNXbsWJsziyyZeNOePXuUkpKSZimnXbt2ycnJSbVr1zYoGcxq27ZtmjNnjpYtWyZHR0d17NhRgYGBRseya9u2bdPs2bO1bNkyFStWTG3bttXXX39tdCy7NXbsWHXq1Enbtm3TM888I0nasWOHNm/erCVLlhiczj79+++/abadOHFCffv21bBhwwxIlD106tRJgYGB+vzzz61Lge/YsUPDhg3TK6+8YnA6ZCUu+8djy8nJSefOnZOnp6ccHR3TXV7HYrGwbN19iI+P16JFizR79mz9+uuv8vHxYfLEu7jbMom34mfvf+rWravhw4erffv2NtuXL1+uTz/9VLt27TIoGczk7NmzCgoKUlBQkE6ePKmnn35agYGB6tixo3Lnzm10PLsUFRWloKAgzZ49W3FxcerYsaNmzJih/fv3y8fHx+h4di8sLEyTJk2yWfnlzTffVM2aNQ1Olr3s3btXr776qo4dO2Z0FLuUmJioYcOGacaMGUpKSpIk5cyZU3379tX48ePl4uJicEJkFco/HltMVvTwduzYodmzZ2vJkiW6du2ahgwZotdeey3NZWXAw8qTJ48OHDhgc/m/dPP2k2rVquny5csGJYNZtGzZUps2bVKhQoXUvXt39erVi6U37+HFF1/Utm3b1KpVK3Xt2lUtWrSQk5OTcubMSflHlgoPD1fDhg3veSXn4+7q1avWSYXLli2rXLlyGZwIWY3L/vHYurXQ363ccwbb1vnz5xUUFKQ5c+YoNjZWr7zyirZu3SpfX1/16tWL4n8XoaGh+ueff/TCCy9Yt82fP1+jR49WfHy8Wrdura+++op34NPh4uKi6OjoNOX/3Llz1pmLgYeRM2dO/fDDD3rhhRfk5ORkdJxsYe3atRo4cKD69u3LPeoP4KeffpKTk5P8/f1ttq9fv14pKSnWNezxP7dPuGmxWHTu3DlNnTrVeusE0oqNjVVycrIKFCigqlWrWrdfvHhROXLk4PbWx8j9XXsKPGYuX76smTNnqm7duqpevbrRcexKqVKldPDgQU2ZMkV///23Jk6cyP3W92ncuHE6fPiw9fODBw8qMDBQfn5+evvtt7Vq1Sp98sknBia0X82bN9fIkSMVGxtr3Xbp0iW98847eu655wxMBrP48ccf9fLLL1P8M2D79u26fPmyatWqpXr16mnq1Km6cOGC0bGyjbfffjvdW7ssFovefvttAxLZv9atW9s82rZtqzFjxqhatWqaM2eO0fHsVufOnbVo0aI025csWaLOnTsbkAhG4bJ/4BbpTVbUrl071alTx+hodqNixYpKSEhQly5d1K1bN+uZfi7zvLeiRYtq1apV1jdL3n33XYWEhGj79u2SpKVLl2r06NE6cuSIkTHt0t9//62GDRvqn3/+sd4LGx4eLi8vL23cuFElSpQwOCHw+IqPj9fixYs1Z84c7d69W8nJyZo4caJ69erFTOJ34ebmpqNHj6p06dI22//8809VrlxZ8fHxxgSD6RQoUEA7duxQpUqVbLYfO3ZMzzzzjP755x+DkiGrceYfj72oqCiNHz9e5cuXV4cOHeTu7q6EhAStXLlS48ePp/jf5tixY/r+++917tw51alTR7Vq1dKkSZMkKd1JE/E///77r7y8vKyfh4SE2FzWWadOHZ05c8aIaHbviSee0IEDBzRhwgT5+PioVq1amjJlig4ePEjxBwyWO3du9erVS9u3b9fBgwf15ptvavz48fL09GTFkrvw8PDQqVOn0mw/efIkE0wiUyUkJFgn+rvVjRs3dO3aNQMSwSiUfzzWXnzxRVWoUEEHDhzQ5MmTdfbsWX311VdGx7J7zzzzjObMmaNz586pT58+Wrp0qZKTk/XGG2/o22+/VUxMjNER7ZKXl5ciIiIk3Zx5d9++fdal/qSbt5vkzJnTqHh2L3fu3Ordu7e+/vprff755+revTvHC7AzFSpU0IQJE/TXX39p4cKFRsexay+//LIGDx5snYBNuln833zzTd40SceJEye0bNky6+/RNWvWqGHDhqpTp44++ugjcTHzndWtW1czZ85Ms33GjBmqVauWAYlgFC77x2MtR44c6U5WxCXsGXf06FHNnj1b3333nS5evKgbN24YHcnu9O3bV/v379enn36qlStXat68eTp79qycnZ0lScHBwZo8ebL27NljcFIAwKMWGxurFi1aaO/evSpevLgk6a+//lKDBg20fPly5cuXz9iAdmTFihXq2LGjdWnmmTNn6j//+Y8aN24sJycnrV+/Xh9++KFGjBhhdFS7tGPHDvn5+alOnTpq1qyZJGnz5s3as2ePNmzYoAYNGhicEFmF8o/H2q+//qrZs2dr8eLFqlSpkrp166bOnTuraNGilP8HlJSUpB9//FFt27Y1OorduXDhgtq2bavt27crT548mjdvntq0aWPd36xZM9WvX18fffSRgSkBAFnFYrFo48aN2r9/v9zc3FStWjU1bNjQ6Fh2p3bt2vL399eHH36ooKAg9evXTx9//LEGDx4sSZo5c6YmTZqko0ePGhvUjoWHh2vChAk2P2sjR45kpY7HDOUfEJMVIWvFxsYqT548aWYVv3jxovLkyWO9EgAA8Hi4fv26XFxcmDvnDvLmzavw8HCVLVtWKSkpcnZ2Vnh4uKpUqSLp5iSJPj4+unr1qsFJAfvGPf+AmKwIWcvDwyPd5cQKFChA8QeAx0RKSoo++OADPfHEE8qTJ4/1Xvb3339fs2fPNjidfYmPj7eejHF0dJSbm5ty5cpl3e/m5qaEhASj4mULf/zxh9577z116dJF58+flyStXbvWZglimB/lH7gNkxUB9unSpUuaNWuWRo4cqYsXL0qS9u3bp7///tvgZACQcamXsE+YMMHmjd8qVapo1qxZBiazPw4ODjZXRdz+Oe4uJCREVatW1a5du7Rs2TJduXJFkrR//36NHj3a4HTISlz2DwCwewcOHJCfn588PDz0559/6vjx4ypTpozee+89RUZGav78+UZHBIAMKVeunL755hs1a9ZMefPm1f79+1WmTBkdO3ZMvr6++vfff42OaDccHR3l4eFhLfyXLl2Su7u7HB1vnse0WCyKi4tTcnKykTHtlq+vrzp06KChQ4fa/Kzt3r1bbdu21V9//WV0RGSRHEYHAJA99erVS1OmTEkzJ0J8fLwGDBigOXPmGJQMZjR06FD16NFDEyZMsPmZe/7559WlSxcDkwHAg/n7779Vrly5NNtTUlJYMec2c+fONTpCtnbw4EEtWLAgzXZPT09duHDBgEQwCuUfwAOZN2+exo8fn6b8X7t2TfPnz6f8I1Pt2bNH33zzTZrtTzzxhKKiogxIBAAPx8fHR7/88otKlSpls/2HH35QzZo1DUplnwICAoyOkK3ly5dP586dk7e3t8323377TU888YRBqWAEyj+ADImLi5PFYpHFYtHly5fl6upq3ZecnKyffvpJnp6eBiaEGbm4uCguLi7N9t9//12FCxc2IBEAPJxRo0YpICBAf//9t1JSUrR8+XIdP35c8+fP1+rVq42OBxPp3LmzRowYoaVLl8rB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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "price_trends = df.groupby(['Journey_Month', 'Journey_Day'])['Price'].mean().reset_index()\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.lineplot(data=price_trends, x='Journey_Day', y='Price', hue='Journey_Month')\n",
        "plt.title('Price Trends Over Time')\n",
        "plt.xlabel('Day of the Month')\n",
        "plt.ylabel('Average Price')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "RhmDEU8j6cF6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "outputId": "6c7c64eb-b8cd-4f58-c308-a6ab8d1ad913"
      },
      "execution_count": 215,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Handling Categorical Data**"
      ],
      "metadata": {
        "id": "K7EjHNTZ5wjj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['Airline'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VfLPbdxGi3VU",
        "outputId": "1ad60416-068d-48cc-cd54-b2d8d21fda7c"
      },
      "execution_count": 216,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Jet Airways                          3849\n",
              "IndiGo                               2053\n",
              "Air India                            1751\n",
              "Multiple carriers                    1196\n",
              "SpiceJet                              818\n",
              "Vistara                               479\n",
              "Air Asia                              319\n",
              "GoAir                                 194\n",
              "Multiple carriers Premium economy      13\n",
              "Jet Airways Business                    6\n",
              "Vistara Premium economy                 3\n",
              "Trujet                                  1\n",
              "Name: Airline, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 216
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 217,
      "metadata": {
        "id": "fht-mc2_XwwQ"
      },
      "outputs": [],
      "source": [
        "# Encoding categorical features\n",
        "le = LabelEncoder()\n",
        "df['Airline'] = le.fit_transform(df['Airline'])\n",
        "df['Source'] = le.fit_transform(df['Source'])\n",
        "df['Destination'] = le.fit_transform(df['Destination'])\n",
        "df['Total_Stops']=le.fit_transform(df['Total_Stops'])\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 218,
      "metadata": {
        "id": "uLqBCybgXwz0"
      },
      "outputs": [],
      "source": [
        "#Additional Info contains almost 80% No info\n",
        "# Route and Total Stops are related to each other\n",
        "df.drop(['Additional_Info','Route'],axis=1,inplace =True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 219,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 443
        },
        "id": "XX2XHor3OAoP",
        "outputId": "f35ba540-a314-42d2-beeb-69caf33ba932"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Airline  Source  Destination  Total_Stops  Price  Journey_Day  \\\n",
              "0            3       0            4            4   3897           24   \n",
              "1            1       2            0            1   7662            1   \n",
              "2            4       4            1            1  13882            9   \n",
              "3            3       2            0            0   6218           12   \n",
              "4            3       0            4            0  13302            1   \n",
              "...        ...     ...          ...          ...    ...          ...   \n",
              "10678        0       2            0            4   4107            9   \n",
              "10679        1       2            0            4   4145           27   \n",
              "10680        4       0            4            4   7229           27   \n",
              "10681       10       0            4            4  12648            1   \n",
              "10682        1       4            1            1  11753            9   \n",
              "\n",
              "       Journey_Month  dep_hour  dep_minute  Arrival_hour  Arrival_minute  \\\n",
              "0                  3        22          20             1              10   \n",
              "1                  5         5          50            13              15   \n",
              "2                  6         9          25             4              25   \n",
              "3                  5        18           5            23              30   \n",
              "4                  3        16          50            21              35   \n",
              "...              ...       ...         ...           ...             ...   \n",
              "10678              4        19          55            22              25   \n",
              "10679              4        20          45            23              20   \n",
              "10680              4         8          20            11              20   \n",
              "10681              3        11          30            14              10   \n",
              "10682              5        10          55            19              15   \n",
              "\n",
              "       Duration_hours  Duration_minutes  \n",
              "0                 2.0              50.0  \n",
              "1                 7.0              25.0  \n",
              "2                19.0               0.0  \n",
              "3                 5.0              25.0  \n",
              "4                 4.0              45.0  \n",
              "...               ...               ...  \n",
              "10678             2.0              30.0  \n",
              "10679             2.0              35.0  \n",
              "10680             3.0               0.0  \n",
              "10681             2.0              40.0  \n",
              "10682             8.0              20.0  \n",
              "\n",
              "[10682 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fb433494-f2b3-4cfa-afd6-54ae51ea33d6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Airline</th>\n",
              "      <th>Source</th>\n",
              "      <th>Destination</th>\n",
              "      <th>Total_Stops</th>\n",
              "      <th>Price</th>\n",
              "      <th>Journey_Day</th>\n",
              "      <th>Journey_Month</th>\n",
              "      <th>dep_hour</th>\n",
              "      <th>dep_minute</th>\n",
              "      <th>Arrival_hour</th>\n",
              "      <th>Arrival_minute</th>\n",
              "      <th>Duration_hours</th>\n",
              "      <th>Duration_minutes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>3897</td>\n",
              "      <td>24</td>\n",
              "      <td>3</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7662</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>50</td>\n",
              "      <td>13</td>\n",
              "      <td>15</td>\n",
              "      <td>7.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>13882</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>25</td>\n",
              "      <td>4</td>\n",
              "      <td>25</td>\n",
              "      <td>19.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6218</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>18</td>\n",
              "      <td>5</td>\n",
              "      <td>23</td>\n",
              "      <td>30</td>\n",
              "      <td>5.0</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>13302</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>16</td>\n",
              "      <td>50</td>\n",
              "      <td>21</td>\n",
              "      <td>35</td>\n",
              "      <td>4.0</td>\n",
              "      <td>45.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10678</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4107</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>19</td>\n",
              "      <td>55</td>\n",
              "      <td>22</td>\n",
              "      <td>25</td>\n",
              "      <td>2.0</td>\n",
              "      <td>30.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10679</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4145</td>\n",
              "      <td>27</td>\n",
              "      <td>4</td>\n",
              "      <td>20</td>\n",
              "      <td>45</td>\n",
              "      <td>23</td>\n",
              "      <td>20</td>\n",
              "      <td>2.0</td>\n",
              "      <td>35.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10680</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>7229</td>\n",
              "      <td>27</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>20</td>\n",
              "      <td>11</td>\n",
              "      <td>20</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10681</th>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>12648</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>30</td>\n",
              "      <td>14</td>\n",
              "      <td>10</td>\n",
              "      <td>2.0</td>\n",
              "      <td>40.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10682</th>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>11753</td>\n",
              "      <td>9</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>55</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "      <td>8.0</td>\n",
              "      <td>20.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10682 rows × 13 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb433494-f2b3-4cfa-afd6-54ae51ea33d6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fb433494-f2b3-4cfa-afd6-54ae51ea33d6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fb433494-f2b3-4cfa-afd6-54ae51ea33d6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2ea8250a-bc68-449d-bd50-e7cdf8a4dfd4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ea8250a-bc68-449d-bd50-e7cdf8a4dfd4')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2ea8250a-bc68-449d-bd50-e7cdf8a4dfd4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 219
        }
      ],
      "source": [
        "df\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 220,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v1IrAO_iOAqJ",
        "outputId": "ec677b8f-c5c2-462f-d3a2-0bfe7e9b4d29"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10682, 13)"
            ]
          },
          "metadata": {},
          "execution_count": 220
        }
      ],
      "source": [
        "df.shape\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iSvfXwAAdlNU"
      },
      "source": [
        "**5.Feature Selection**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 221,
      "metadata": {
        "id": "N2151YzuOAtg"
      },
      "outputs": [],
      "source": [
        "#Split the dataset into features (X) and the target variable (y)\n",
        "X = df.drop('Price', axis=1)\n",
        "y = df['Price']"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 477
        },
        "id": "raykHpPZJ5Zc",
        "outputId": "474277b2-54c4-4693-c7c8-b9c83e4e4f9a"
      },
      "execution_count": 222,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   Airline    Source  Destination  Total_Stops     Price  \\\n",
              "Airline           1.000000 -0.016231     0.025974     0.035973 -0.039565   \n",
              "Source           -0.016231  1.000000    -0.654012    -0.496726  0.218827   \n",
              "Destination       0.025974 -0.654012     1.000000     0.490618 -0.187163   \n",
              "Total_Stops       0.035973 -0.496726     0.490618     1.000000 -0.571221   \n",
              "Price            -0.039565  0.218827    -0.187163    -0.571221  1.000000   \n",
              "Journey_Day       0.026137  0.087094    -0.024420     0.029225 -0.153774   \n",
              "Journey_Month     0.024674  0.209274    -0.236862    -0.026328 -0.103643   \n",
              "dep_hour         -0.035269 -0.072605    -0.061014     0.039224  0.006799   \n",
              "dep_minute       -0.059922 -0.096896     0.095912     0.048901 -0.024458   \n",
              "Arrival_hour     -0.007567  0.004835    -0.046744    -0.095650  0.024244   \n",
              "Arrival_minute   -0.071092 -0.164694     0.045978     0.175980 -0.086155   \n",
              "Duration_hours   -0.158136  0.319164    -0.355151    -0.606137  0.508778   \n",
              "Duration_minutes -0.028009 -0.209473     0.160195     0.182223 -0.124855   \n",
              "\n",
              "                  Journey_Day  Journey_Month  dep_hour  dep_minute  \\\n",
              "Airline              0.026137       0.024674 -0.035269   -0.059922   \n",
              "Source               0.087094       0.209274 -0.072605   -0.096896   \n",
              "Destination         -0.024420      -0.236862 -0.061014    0.095912   \n",
              "Total_Stops          0.029225      -0.026328  0.039224    0.048901   \n",
              "Price               -0.153774      -0.103643  0.006799   -0.024458   \n",
              "Journey_Day          1.000000      -0.038359  0.002170   -0.008170   \n",
              "Journey_Month       -0.038359       1.000000  0.039127   -0.059267   \n",
              "dep_hour             0.002170       0.039127  1.000000   -0.024745   \n",
              "dep_minute          -0.008170      -0.059267 -0.024745    1.000000   \n",
              "Arrival_hour        -0.003245      -0.003927  0.005180    0.043122   \n",
              "Arrival_minute      -0.017510      -0.100626  0.067911   -0.017597   \n",
              "Duration_hours      -0.022059       0.016141  0.002869   -0.022104   \n",
              "Duration_minutes    -0.008940      -0.040897 -0.023707    0.092485   \n",
              "\n",
              "                  Arrival_hour  Arrival_minute  Duration_hours  \\\n",
              "Airline              -0.007567       -0.071092       -0.158136   \n",
              "Source                0.004835       -0.164694        0.319164   \n",
              "Destination          -0.046744        0.045978       -0.355151   \n",
              "Total_Stops          -0.095650        0.175980       -0.606137   \n",
              "Price                 0.024244       -0.086155        0.508778   \n",
              "Journey_Day          -0.003245       -0.017510       -0.022059   \n",
              "Journey_Month        -0.003927       -0.100626        0.016141   \n",
              "dep_hour              0.005180        0.067911        0.002869   \n",
              "dep_minute            0.043122       -0.017597       -0.022104   \n",
              "Arrival_hour          1.000000       -0.154363        0.055276   \n",
              "Arrival_minute       -0.154363        1.000000       -0.074450   \n",
              "Duration_hours        0.055276       -0.074450        1.000000   \n",
              "Duration_minutes     -0.118309        0.151628       -0.126468   \n",
              "\n",
              "                  Duration_minutes  \n",
              "Airline                  -0.028009  \n",
              "Source                   -0.209473  \n",
              "Destination               0.160195  \n",
              "Total_Stops               0.182223  \n",
              "Price                    -0.124855  \n",
              "Journey_Day              -0.008940  \n",
              "Journey_Month            -0.040897  \n",
              "dep_hour                 -0.023707  \n",
              "dep_minute                0.092485  \n",
              "Arrival_hour             -0.118309  \n",
              "Arrival_minute            0.151628  \n",
              "Duration_hours           -0.126468  \n",
              "Duration_minutes          1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fe7ba3bf-3dc3-48eb-9b30-9d9325992214\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Airline</th>\n",
              "      <th>Source</th>\n",
              "      <th>Destination</th>\n",
              "      <th>Total_Stops</th>\n",
              "      <th>Price</th>\n",
              "      <th>Journey_Day</th>\n",
              "      <th>Journey_Month</th>\n",
              "      <th>dep_hour</th>\n",
              "      <th>dep_minute</th>\n",
              "      <th>Arrival_hour</th>\n",
              "      <th>Arrival_minute</th>\n",
              "      <th>Duration_hours</th>\n",
              "      <th>Duration_minutes</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Airline</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.016231</td>\n",
              "      <td>0.025974</td>\n",
              "      <td>0.035973</td>\n",
              "      <td>-0.039565</td>\n",
              "      <td>0.026137</td>\n",
              "      <td>0.024674</td>\n",
              "      <td>-0.035269</td>\n",
              "      <td>-0.059922</td>\n",
              "      <td>-0.007567</td>\n",
              "      <td>-0.071092</td>\n",
              "      <td>-0.158136</td>\n",
              "      <td>-0.028009</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Source</th>\n",
              "      <td>-0.016231</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.654012</td>\n",
              "      <td>-0.496726</td>\n",
              "      <td>0.218827</td>\n",
              "      <td>0.087094</td>\n",
              "      <td>0.209274</td>\n",
              "      <td>-0.072605</td>\n",
              "      <td>-0.096896</td>\n",
              "      <td>0.004835</td>\n",
              "      <td>-0.164694</td>\n",
              "      <td>0.319164</td>\n",
              "      <td>-0.209473</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Destination</th>\n",
              "      <td>0.025974</td>\n",
              "      <td>-0.654012</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.490618</td>\n",
              "      <td>-0.187163</td>\n",
              "      <td>-0.024420</td>\n",
              "      <td>-0.236862</td>\n",
              "      <td>-0.061014</td>\n",
              "      <td>0.095912</td>\n",
              "      <td>-0.046744</td>\n",
              "      <td>0.045978</td>\n",
              "      <td>-0.355151</td>\n",
              "      <td>0.160195</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Total_Stops</th>\n",
              "      <td>0.035973</td>\n",
              "      <td>-0.496726</td>\n",
              "      <td>0.490618</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.571221</td>\n",
              "      <td>0.029225</td>\n",
              "      <td>-0.026328</td>\n",
              "      <td>0.039224</td>\n",
              "      <td>0.048901</td>\n",
              "      <td>-0.095650</td>\n",
              "      <td>0.175980</td>\n",
              "      <td>-0.606137</td>\n",
              "      <td>0.182223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Price</th>\n",
              "      <td>-0.039565</td>\n",
              "      <td>0.218827</td>\n",
              "      <td>-0.187163</td>\n",
              "      <td>-0.571221</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.153774</td>\n",
              "      <td>-0.103643</td>\n",
              "      <td>0.006799</td>\n",
              "      <td>-0.024458</td>\n",
              "      <td>0.024244</td>\n",
              "      <td>-0.086155</td>\n",
              "      <td>0.508778</td>\n",
              "      <td>-0.124855</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Journey_Day</th>\n",
              "      <td>0.026137</td>\n",
              "      <td>0.087094</td>\n",
              "      <td>-0.024420</td>\n",
              "      <td>0.029225</td>\n",
              "      <td>-0.153774</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.038359</td>\n",
              "      <td>0.002170</td>\n",
              "      <td>-0.008170</td>\n",
              "      <td>-0.003245</td>\n",
              "      <td>-0.017510</td>\n",
              "      <td>-0.022059</td>\n",
              "      <td>-0.008940</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Journey_Month</th>\n",
              "      <td>0.024674</td>\n",
              "      <td>0.209274</td>\n",
              "      <td>-0.236862</td>\n",
              "      <td>-0.026328</td>\n",
              "      <td>-0.103643</td>\n",
              "      <td>-0.038359</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.039127</td>\n",
              "      <td>-0.059267</td>\n",
              "      <td>-0.003927</td>\n",
              "      <td>-0.100626</td>\n",
              "      <td>0.016141</td>\n",
              "      <td>-0.040897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dep_hour</th>\n",
              "      <td>-0.035269</td>\n",
              "      <td>-0.072605</td>\n",
              "      <td>-0.061014</td>\n",
              "      <td>0.039224</td>\n",
              "      <td>0.006799</td>\n",
              "      <td>0.002170</td>\n",
              "      <td>0.039127</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.024745</td>\n",
              "      <td>0.005180</td>\n",
              "      <td>0.067911</td>\n",
              "      <td>0.002869</td>\n",
              "      <td>-0.023707</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dep_minute</th>\n",
              "      <td>-0.059922</td>\n",
              "      <td>-0.096896</td>\n",
              "      <td>0.095912</td>\n",
              "      <td>0.048901</td>\n",
              "      <td>-0.024458</td>\n",
              "      <td>-0.008170</td>\n",
              "      <td>-0.059267</td>\n",
              "      <td>-0.024745</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.043122</td>\n",
              "      <td>-0.017597</td>\n",
              "      <td>-0.022104</td>\n",
              "      <td>0.092485</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Arrival_hour</th>\n",
              "      <td>-0.007567</td>\n",
              "      <td>0.004835</td>\n",
              "      <td>-0.046744</td>\n",
              "      <td>-0.095650</td>\n",
              "      <td>0.024244</td>\n",
              "      <td>-0.003245</td>\n",
              "      <td>-0.003927</td>\n",
              "      <td>0.005180</td>\n",
              "      <td>0.043122</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.154363</td>\n",
              "      <td>0.055276</td>\n",
              "      <td>-0.118309</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Arrival_minute</th>\n",
              "      <td>-0.071092</td>\n",
              "      <td>-0.164694</td>\n",
              "      <td>0.045978</td>\n",
              "      <td>0.175980</td>\n",
              "      <td>-0.086155</td>\n",
              "      <td>-0.017510</td>\n",
              "      <td>-0.100626</td>\n",
              "      <td>0.067911</td>\n",
              "      <td>-0.017597</td>\n",
              "      <td>-0.154363</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.074450</td>\n",
              "      <td>0.151628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Duration_hours</th>\n",
              "      <td>-0.158136</td>\n",
              "      <td>0.319164</td>\n",
              "      <td>-0.355151</td>\n",
              "      <td>-0.606137</td>\n",
              "      <td>0.508778</td>\n",
              "      <td>-0.022059</td>\n",
              "      <td>0.016141</td>\n",
              "      <td>0.002869</td>\n",
              "      <td>-0.022104</td>\n",
              "      <td>0.055276</td>\n",
              "      <td>-0.074450</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.126468</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Duration_minutes</th>\n",
              "      <td>-0.028009</td>\n",
              "      <td>-0.209473</td>\n",
              "      <td>0.160195</td>\n",
              "      <td>0.182223</td>\n",
              "      <td>-0.124855</td>\n",
              "      <td>-0.008940</td>\n",
              "      <td>-0.040897</td>\n",
              "      <td>-0.023707</td>\n",
              "      <td>0.092485</td>\n",
              "      <td>-0.118309</td>\n",
              "      <td>0.151628</td>\n",
              "      <td>-0.126468</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe7ba3bf-3dc3-48eb-9b30-9d9325992214')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fe7ba3bf-3dc3-48eb-9b30-9d9325992214 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fe7ba3bf-3dc3-48eb-9b30-9d9325992214');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a4eabf49-391c-420d-aaf6-dc186de8497c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a4eabf49-391c-420d-aaf6-dc186de8497c')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a4eabf49-391c-420d-aaf6-dc186de8497c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 222
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(15,10))\n",
        "\n",
        "sns.heatmap(df.corr(),annot=True,cmap='RdYlGn')\n",
        "plt.title(\"Heat Map showing Correlation between Features\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 962
        },
        "id": "t4Gkwq1PJ8BV",
        "outputId": "d233ec86-3c31-41e7-ad09-b6e6633d1d52"
      },
      "execution_count": 223,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1000 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=df.drop(['Duration_minutes','Journey_Day'],axis=1)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "OTIad3eLRP41",
        "outputId": "68cd7110-6558-42d7-f592-853ad4b3d46a"
      },
      "execution_count": 224,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Airline  Source  Destination  Total_Stops  Price  Journey_Month  \\\n",
              "0            3       0            4            4   3897              3   \n",
              "1            1       2            0            1   7662              5   \n",
              "2            4       4            1            1  13882              6   \n",
              "3            3       2            0            0   6218              5   \n",
              "4            3       0            4            0  13302              3   \n",
              "...        ...     ...          ...          ...    ...            ...   \n",
              "10678        0       2            0            4   4107              4   \n",
              "10679        1       2            0            4   4145              4   \n",
              "10680        4       0            4            4   7229              4   \n",
              "10681       10       0            4            4  12648              3   \n",
              "10682        1       4            1            1  11753              5   \n",
              "\n",
              "       dep_hour  dep_minute  Arrival_hour  Arrival_minute  Duration_hours  \n",
              "0            22          20             1              10             2.0  \n",
              "1             5          50            13              15             7.0  \n",
              "2             9          25             4              25            19.0  \n",
              "3            18           5            23              30             5.0  \n",
              "4            16          50            21              35             4.0  \n",
              "...         ...         ...           ...             ...             ...  \n",
              "10678        19          55            22              25             2.0  \n",
              "10679        20          45            23              20             2.0  \n",
              "10680         8          20            11              20             3.0  \n",
              "10681        11          30            14              10             2.0  \n",
              "10682        10          55            19              15             8.0  \n",
              "\n",
              "[10682 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-408e088c-6cf1-4d63-a0d1-b872f4518960\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Airline</th>\n",
              "      <th>Source</th>\n",
              "      <th>Destination</th>\n",
              "      <th>Total_Stops</th>\n",
              "      <th>Price</th>\n",
              "      <th>Journey_Month</th>\n",
              "      <th>dep_hour</th>\n",
              "      <th>dep_minute</th>\n",
              "      <th>Arrival_hour</th>\n",
              "      <th>Arrival_minute</th>\n",
              "      <th>Duration_hours</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>3897</td>\n",
              "      <td>3</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>10</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7662</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>50</td>\n",
              "      <td>13</td>\n",
              "      <td>15</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>13882</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>25</td>\n",
              "      <td>4</td>\n",
              "      <td>25</td>\n",
              "      <td>19.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6218</td>\n",
              "      <td>5</td>\n",
              "      <td>18</td>\n",
              "      <td>5</td>\n",
              "      <td>23</td>\n",
              "      <td>30</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>13302</td>\n",
              "      <td>3</td>\n",
              "      <td>16</td>\n",
              "      <td>50</td>\n",
              "      <td>21</td>\n",
              "      <td>35</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10678</th>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4107</td>\n",
              "      <td>4</td>\n",
              "      <td>19</td>\n",
              "      <td>55</td>\n",
              "      <td>22</td>\n",
              "      <td>25</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10679</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4145</td>\n",
              "      <td>4</td>\n",
              "      <td>20</td>\n",
              "      <td>45</td>\n",
              "      <td>23</td>\n",
              "      <td>20</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10680</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>7229</td>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>20</td>\n",
              "      <td>11</td>\n",
              "      <td>20</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10681</th>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>12648</td>\n",
              "      <td>3</td>\n",
              "      <td>11</td>\n",
              "      <td>30</td>\n",
              "      <td>14</td>\n",
              "      <td>10</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10682</th>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>11753</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>55</td>\n",
              "      <td>19</td>\n",
              "      <td>15</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10682 rows × 11 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-408e088c-6cf1-4d63-a0d1-b872f4518960')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-408e088c-6cf1-4d63-a0d1-b872f4518960 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-408e088c-6cf1-4d63-a0d1-b872f4518960');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f50016c2-e7b4-4f7f-bd78-a4223773a320\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f50016c2-e7b4-4f7f-bd78-a4223773a320')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f50016c2-e7b4-4f7f-bd78-a4223773a320 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 224
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 225,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DDFnsK6Vio0F",
        "outputId": "d0da51ac-37e2-4a0d-d583-bd007af7973a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-0.41080484, -1.59158198,  1.73866073, ..., -0.8900139 ,\n",
              "        -0.97061397,  1.27904078],\n",
              "       [-1.26115217, -0.301554  , -1.02642267, ..., -0.5870944 ,\n",
              "        -0.38199906, -0.19631866],\n",
              "       [ 0.01436882,  0.98847397, -0.33515182, ...,  0.0187446 ,\n",
              "         1.03067671, -1.67167809],\n",
              "       ...,\n",
              "       [ 0.01436882, -1.59158198,  1.73866073, ..., -0.2841749 ,\n",
              "        -0.85289099, -1.67167809],\n",
              "       [ 2.56541078, -1.59158198,  1.73866073, ..., -0.8900139 ,\n",
              "        -0.97061397,  0.688897  ],\n",
              "       [-1.26115217,  0.98847397, -0.33515182, ..., -0.5870944 ,\n",
              "        -0.26427608, -0.49139054]])"
            ]
          },
          "metadata": {},
          "execution_count": 225
        }
      ],
      "source": [
        "# Create and fit a StandardScaler to the training data\n",
        "scaler=StandardScaler()\n",
        "X_scaled=scaler.fit_transform(X)\n",
        "X_scaled"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 226,
      "metadata": {
        "id": "rXM5Tp92g-2D"
      },
      "outputs": [],
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=1)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ar6q8PPZiwG2"
      },
      "source": [
        "**5.Model Building and Evaluation**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 227,
      "metadata": {
        "id": "LvlSt7P7g-4v"
      },
      "outputs": [],
      "source": [
        "# Define the regression models\n",
        "models = [\n",
        "    (\"KNeighbors Regression\", KNeighborsRegressor()),\n",
        "    (\"Linear Regression\", LinearRegression()),\n",
        "    (\"Random Forest\", RandomForestRegressor()),\n",
        "    (\"Decision Tree\", DecisionTreeRegressor())\n",
        "]\n",
        "\n",
        "results = []"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Train and evaluate the models\n",
        "for name, model in models:\n",
        "    model.fit(X_train, y_train)\n",
        "    y_pred = model.predict(X_test)\n",
        "\n",
        "    mse = mean_squared_error(y_test, y_pred)\n",
        "    mae = mean_absolute_error(y_test, y_pred)\n",
        "    r2 = r2_score(y_test, y_pred)\n",
        "\n",
        "    results.append([name, mse, mae, r2])"
      ],
      "metadata": {
        "id": "MkAmIbRl_y5O"
      },
      "execution_count": 228,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a DataFrame to display the results\n",
        "results_df = pd.DataFrame(results, columns=['Model', 'Mean Squared Error', 'Mean Absolute Error', 'R-squared'])\n",
        "print(results_df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7nCefNJj__Ro",
        "outputId": "eb28942b-f880-468c-9674-ff56a52b198e"
      },
      "execution_count": 229,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   Model  Mean Squared Error  Mean Absolute Error  R-squared\n",
            "0  KNeighbors Regression        5.800843e+06          1544.007114   0.706688\n",
            "1      Linear Regression        1.117967e+07          2484.595643   0.434714\n",
            "2          Random Forest        3.995320e+06          1199.657574   0.797982\n",
            "3          Decision Tree        8.465831e+06          1428.988482   0.571936\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model_names = [model[0] for model in models]\n",
        "\n",
        "# Define the metrics and their corresponding colors\n",
        "metrics = ['Mean Squared Error', 'Mean Absolute Error', 'R-squared']\n",
        "metric_colors = ['red', 'lightblue', 'lightgreen']\n",
        "\n",
        "# Plot model comparison for each metric\n",
        "for metric, color in zip(metrics, metric_colors):\n",
        "    plt.figure(figsize=(12, 6))\n",
        "    plt.barh(model_names, results_df[metric], color=color)\n",
        "    plt.xlabel(metric)\n",
        "    plt.ylabel('Models')\n",
        "    plt.title(f'Model Comparison - {metric}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "2xg0nB8GACHn",
        "outputId": "b10d8c79-4d02-46d2-eedc-b36fe8c056e3"
      },
      "execution_count": 230,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABHMAAAIjCAYAAACAi1e6AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABkCElEQVR4nO3dd3QV1d7G8eckISE99AQMndB7E+lFAygQrnSE0AQFpFxQRNCAgiCCWFBEWrAgKFJUOkqRgEivASmhiPSSEFog2e8fvjmXQxJIQgmD389as2Rm9sz89pwJcp7smbEZY4wAAAAAAABgCU4ZXQAAAAAAAABSjzAHAAAAAADAQghzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQghzAAAAAAAALIQwBwAApJnNZtOwYcPSvN3hw4dls9kUHh5+32t6HOXPn1+dOnXK6DIAuzp16qhOnToZXQYA/OsR5gAAYFHh4eGy2Wyy2Wxau3ZtkvXGGAUGBspms+m5557LgArv3alTpzRw4EAVK1ZMHh4e8vT0VMWKFTVixAhdvHgxo8tDKg0bNkw2m01OTk46duxYkvUxMTFyd3eXzWZT7969M6DC1IuNjVVYWJhKlSolT09PZcuWTeXKlVPfvn31999/Z3R5j4z8+fPb/366fWrYsGFGlwcAlueS0QUAAIB7kzlzZs2cOVM1atRwWL569Wr99ddfcnNzy6DK7s3GjRvVuHFjxcbG6oUXXlDFihUlSZs2bdLo0aO1Zs0aLVu2LIOrfLD27dsnJ6fH53dvbm5u+vbbb/Xaa685LJ87d24GVZQ2N27cUK1atbR3716FhobqlVdeUWxsrHbv3q2ZM2eqefPmyp07d0aX+cgoV66cBgwYkGQ55wgA7h1hDgAAFte4cWN9//33+vjjj+Xi8r//tc+cOVMVK1bU2bNnM7C69Ll48aKaN28uZ2dnbd26VcWKFXNYP3LkSE2ePDmDqnuwjDG6du2a3N3dLRvEpaRx48bJhjkzZ87Us88+qx9++CGDKkud+fPna+vWrfrmm2/Url07h3XXrl1TXFxcBlV2d5cvX5anp+dDPWaePHn0wgsvpHm7lGpNSEhQXFycMmfOnO6aMuI8AMCD8Pj8qgcAgH+ptm3b6ty5c1q+fLl9WVxcnObMmZPkC2eiy5cva8CAAQoMDJSbm5uKFi2qsWPHyhjj0O769evq37+/cuTIIW9vbzVt2lR//fVXsvs8fvy4unTpoly5csnNzU0lS5bUtGnT0tWnSZMm6fjx4/rggw+SBDmSlCtXLg0dOtRh2WeffaaSJUvKzc1NuXPnVq9evZLcilWnTh2VKlVKO3bsUO3ateXh4aHChQtrzpw5kv4ZzVS1alW5u7uraNGiWrFihcP2ibcL7d27V61atZKPj4+yZcumvn376tq1aw5tp0+frnr16ilnzpxyc3NTiRIlNHHixCR9yZ8/v5577jktXbpUlSpVkru7uyZNmmRfd+szc27cuKHhw4erSJEiypw5s7Jly6YaNWo4fPaS9Ouvv6pmzZry9PSUn5+fmjVrpsjIyGT7cuDAAXXq1El+fn7y9fVV586ddeXKlWQ+lXvXrl07bdu2TXv37rUvO3nypH799dcUr9Xr168rLCxMhQsXlpubmwIDA/Xaa6/p+vXrDu3Ser7Xrl2rKlWqKHPmzCpYsKC+/PLLu9Z/8OBBSVL16tWTrMucObN8fHwcls2fP1+lSpVS5syZVapUKc2bN0+dOnVS/vz57W1WrVolm82mVatWOWyb3POlduzYoU6dOqlgwYLKnDmz/P391aVLF507d85h28TPds+ePWrXrp2yZMniMHLv66+/VsWKFeXu7q6sWbOqTZs2yd7+9sUXX6hQoUJyd3dXlSpV9Ntvv931HKVVp06d5OXlpYMHD6px48by9vZW+/btJcl+290333xj/9lesmSJJGnr1q1q1KiRfHx85OXlpfr16+v333932HfirairV69Wz549lTNnTj3xxBP3vQ8AkBEYmQMAgMXlz59f1apV07fffqtGjRpJkhYvXqzo6Gi1adNGH3/8sUN7Y4yaNm2qlStXqmvXripXrpyWLl2qV199VcePH9f48ePtbbt166avv/5a7dq101NPPaVff/1Vzz77bJIaTp06pSeffNL+5StHjhxavHixunbtqpiYGPXr1y9Nffrxxx/l7u6uFi1apKr9sGHDNHz4cDVo0EAvv/yy9u3bp4kTJ2rjxo2KiIhQpkyZ7G0vXLig5557Tm3atFHLli01ceJEtWnTRt9884369eunl156Se3atdP777+vFi1a6NixY/L29nY4XqtWrZQ/f36NGjVKv//+uz7++GNd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8HD7/KBBgxQUFCQPDw8VLFhQb775pkNtibdGTZkyRQUKFFDmzJklSRcvXlS3bt2UI0cO+fj4qF69etq+fbvDsUaPHq1cuXLJ29tbXbt21bVr11Ls862yZcvm8BtRf39/e8CSUj02m00TJ05U06ZN5enpqZEjR0qSJk6cqEKFCsnV1VVFixbVV1995XCslLYDADyejh49qunTp+v7779XzZo1VahQIQ0cOFA1atTQ9OnTk7S/du2avvnmm3SNypEIcwAAAO6bLl26OPyDbdq0aercuXOSdqNGjdKXX36pzz//XLt371b//v31wgsvaPXq1ZL+CXueeOIJff/999qzZ4/eeustvfHGG/ruu+8c9rNy5UodPHhQK1eu1IwZMxQeHu4QqNzO399fv/76q86cOZNim1dffVWrV6/WggULtGzZMq1atUpbtmxJ45mQvL29FR4erj179uijjz7S5MmTNX78eIc2Bw4c0A8//KC5c+dq27ZtkqSWLVvq9OnTWrx4sTZv3qwKFSqofv36On/+vCTpu+++07Bhw/Tuu+9q06ZNCggI0GeffZbm+pKTXD3SP0FP8+bNtXPnTnXp0kXz5s1T3759NWDAAO3atUs9evRQ586dtXLlSof93b4dAODxtXPnTsXHxysoKEheXl72afXq1Tp48GCS9vPmzdOlS5cUGhqavgMaAAAA3JPQ0FDTrFkzc/r0aePm5mYOHz5sDh8+bDJnzmzOnDljmjVrZkJDQ40xxly7ds14eHiYdevWOeyja9eupm3btikeo1evXub55593OGa+fPnMzZs37ctatmxpWrduneI+du/ebYoXL26cnJxM6dKlTY8ePcyiRYvs6y9dumRcXV3Nd999Z1927tw54+7ubvr27WtfJsnMmzfPYd++vr5m+vTpKR77/fffNxUrVrTPh4WFmUyZMpnTp0/bl/3222/Gx8fHXLt2zWHbQoUKmUmTJhljjKlWrZrp2bOnw/qqVauasmXLpnjsqKgoI8m4u7sbT09Ph+lO9ST2tV+/fg7LnnrqKfPiiy86LGvZsqVp3LjxHbcDADw+bv9/4axZs4yzs7PZu3ev2b9/v8N04sSJJNvXq1fPhISEpPv4PDMHAADgPsmRI4eeffZZhYeHyxijZ599VtmzZ3doc+DAAV25ckVPP/20w/K4uDiH27E+/fRTTZs2TUePHtXVq1cVFxeX5I1NJUuWlLOzs30+ICBAO3fuTLG+EiVKaNeuXdq8ebMiIiLsr1jt1KmTpkyZooMHDyouLk5Vq1a1b5M1a1YVLVo0zedi9uzZ+vjjj3Xw4EHFxsbq5s2b8vHxcWiTL18+5ciRwz6/fft2xcbGJnmOzdWrV+2/1YyMjEzyoOlq1aolGRWTUk3FixdPcf3t9SSqVKmSw3xkZKS6d+/usKx69epJboW7fTsAwOOrfPnyio+P1+nTp+/6DJyoqCitXLlSP/74Y7qPR5gDAABwH3Xp0kW9e/eWpGRfXRobGytJWrhwofLkyeOwzs3NTZI0a9YsDRw4UOPGjVO1atXk7e2t999/Xxs2bHBof/sDdW02mxISEu5Yn5OTkypXrqzKlSurX79++vrrr9WhQwcNGTIk1X202Wz655eS/3Pr83DWr1+v9u3ba/jw4QoODpavr69mzZqlcePGOWzj6enpMB8bG6uAgACHN38k8vPzS3V9KQkMDFThwoVTXH97PXdbfjfp3Q4A8GiKjY3VgQMH7PNRUVHatm2bsmbNqqCgILVv314dO3bUuHHjVL58eZ05c0a//PKLypQpo2effda+3bRp0xQQEKBGjRqluxbCHAAAgPuoYcOGiouLk81mU3BwcJL1JUqUkJubm44eParatWsnu4+IiAg99dRT6tmzp31Zcvfb3w8lSpSQ9M+DjwsVKqRMmTJpw4YN9jdwXbhwQX/++adDrTly5NCJEyfs8/v379eVK1fs8+vWrVO+fPkcAqIjR47ctZYKFSro5MmTcnFxUf78+ZNtU7x4cW3YsEEdO3a0L3vYrxcvXry4IiIiHJ5zEBERYT+XAIDH06ZNm1S3bl37/H//+19JUmhoqMLDwzV9+nSNGDFCAwYM0PHjx5U9e3Y9+eSTeu655+zbJCQkKDw8XJ06dXIYXZtWhDkAAAD3kbOzsyIjI+1/vp23t7cGDhyo/v37KyEhQTVq1FB0dLQiIiLk4+Oj0NBQFSlSRF9++aWWLl2qAgUK6KuvvtLGjRtVoECBe6qtRYsWql69up566in5+/srKipKgwcPVlBQkIoVKyYXFxd17dpVr776qrJly6acOXNqyJAhcnJyfGdGvXr1NGHCBFWrVk3x8fEaNGiQwyihIkWK6OjRo5o1a5YqV66shQsXat68eXetr0GDBqpWrZpCQkI0ZswYBQUF6e+//9bChQvVvHlzVapUSX379lWnTp1UqVIlVa9eXd988412796tggUL3nX/586d08mTJx2W+fn52d9clVqvvvqqWrVqpfLly6tBgwb66aefNHfuXK1YsSJN+wEAWEudOnWSjEy9VaZMmTR8+HANHz48xTZOTk46duzYPdfC26wAAADuMx8fnyTPh7nVO++8ozfffFOjRo1S8eLF1bBhQy1cuNAe1vTo0UP/+c9/1Lp1a1WtWlXnzp1zGKWTXsHBwfrpp5/UpEkTBQUFKTQ0VMWKFdOyZcvk4vLP7/jef/991axZU02aNFGDBg1Uo0YNVaxY0WE/48aNU2BgoGrWrKl27dpp4MCB8vDwsK9v2rSp+vfvr969e6tcuXJat26d3nzzzbvWZ7PZtGjRItWqVUudO3dWUFCQ2rRpoyNHjihXrlySpNatW+vNN9/Ua6+9pooVK+rIkSN6+eWXU9X/Bg0aKCAgwGG6/RXrqRESEqKPPvpIY8eOVcmSJTVp0iRNnz5dderUSfO+AABID5u5U6wEAACAf706deqoXLly+vDDDzO6FAAAIEbmAAAAAAAAWAphDgAAAAAAgIVwmxUAAAAAAICFMDIHAAAAAADAQghzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQghzAAAAAAAALOT/ALMJNusxs3yNAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "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thcdHa3u3burVatWmjVrVpa3uIwfP14TJkxQ8+bNNXv2bI0dO1YlS5bUzp077X3WrFmjkJAQnTx5UuPHj9fTTz+tTZs2qWHDhjp06FCmx3L27FlNnjxZXbp0UVhYmCZMmHADZ/3mNWnSRCVKlHAIKZYsWSIvL69Mr6u0tDQ9+OCDmj59utq3b6+33npLHTt21MyZM9W1a1eHvjdzvg8ePKjOnTurVatWmjFjhvLnz6++ffvq119/vaHjWLRokTw9PfXAAw+oXr16KlOmjD755JNM+/7zzz9q27atateurWnTpqlEiRJ64oknHILO9957T8OHD1flypX1xhtvaMKECapRo4a2bNli7/Prr7+qcePG2rVrl5599ln997//VWxsrJo1a+bQL7sqVaqkl19+WZI0aNAgffTRR/roo4/UpEkTSZcDwiZNmighIUHjxo3Tq6++qjNnzqhFixbaunXrDe3j/Pnz+vvvvzO8UlJSHPpd6/vwyiuv6LvvvtPo0aP16quvysXFRWFhYerSpYucnZ01efJkPfbYY1q6dKkaNWqUIdBNSUlRSEiIihQpounTp6tTp07ZP2kAcDcwAADAUhYsWGAkmW3btpnZs2cbb29vc/78eWOMMY888ohp3ry5McaYwMBA065dO/t6y5YtM5LMxIkTHbbXuXNnY7PZzMGDB40xxkRGRhpJZsiQIQ79evToYSSZcePG2dsGDBhg/P39zd9//+3Qt1u3biZfvnz2umJjY40ks2DBgmseW/78+U316tVv6DycPHnSuLi4mNatW5vU1FR7++zZs40k88EHH9jbmjZtaiSZTz/91N62f/9+I8k4OTmZn3/+2d6+atWqDLWOGzfOSDIPPvigQw1DhgwxksyuXbvsbenHfKWQkBBTunRph7bAwEAjyaxcuTJD/8DAQNOnTx/7++rVqzt8lpmpUaOGKVKkiDl16pS9bdeuXcbJycn07t07w7H079/fYf2HHnrIFCxY8Jr7uFnp+/rrr7/M6NGjTdmyZe3L6tata/r162eMMUaSGTp0qH3ZRx99ZJycnMxPP/3ksL25c+caSSYiIsLedrPne8OGDfa2kydPGldXVzNq1KgbOp6qVauanj172t+/8MILplChQubSpUsO/dKvtxkzZtjbkpKS7J9RcnKyMcaYDh06mCpVqlxznx07djQuLi4mJibG3nb0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FRWl6tWr24McSWrYsKHS0tIUHR2tokWLSpKqVKliD3IkqWjRorrvvvvs752dnVWwYEH7vq933OnS9xsVFaUGDRrYg5z0OhITE/Xnn3+qZMmSkqTatWs7bG/Xrl1at26dvLy8MuwrJiZGrVu3VsuWLVW1alWFhISodevW6ty5s/Lnz3/NOq/k6uoqV1fXG+4PAAAAAEBuIcy5jTw9PVW2bFlJ0gcffKDq1atr/vz5GjBggCTptdde06xZs/TGG2+oatWq8vT01IgRI5ScnOywnbx58zq8t9lsSktLy/F6M9tPdvZ95XFnx5WhkyQlJiaqffv2mU4c7e/vL2dnZ61evVqbNm3SDz/8oLfeektjx47Vli1bVKpUqWzXAQAAAADA3Yg5c+4QJycnvfDCC3rxxRd14cIFSVJERIQ6dOigXr16qXr16ipdurR+++23m9pupUqVdPjwYR07dsze9vPPP2fos2vXLp07d87eFhERIScnJ1WoUOEWjurmVKpUSZs3b9aVd/ZFRETI29tbJUqUyHK9WrVq6ddff1VQUJDKli3r8EoPfmw2mxo2bKgJEybol19+kYuLi7766itJkouLi1JTU2/vwQEAAAAAcIcQ5txBjzzyiJydnfX2229LksqVK2cfURIVFaXBgwfrxIkTN7XN4OBglS9fXn369NGuXbv0008/aezYsQ59evbsKTc3N/Xp00d79+7VunXr9OSTT+rRRx+132J1JwwZMkSHDx/Wk08+qf3792v58uUaN26cnn76aYfbu642dOhQnT59Wt27d9e2bdsUExOjVatWqV+/fkpNTdWWLVv06quvavv27YqLi9PSpUv1119/qVKlSpKkoKAg7d69W9HR0fr777916dKlO3XIAAAAAADkOMKcOyhPnjwaNmyYpk2bpnPnzunFF19UrVq1FBISombNmsnPz08dO3a8qW06OTnpq6++0oULF1SvXj0NHDhQkyZNcujj4eGhVatW6fTp06pbt646d+6sli1bavbs2Tl4dNdXvHhxff/999q6dauqV6+uxx9/XAMGDNCLL754zfWKFSumiIgIpaamqnXr1qpatapGjBghX19fOTk5ycfHRxs2bFDbtm1Vvnx5vfjii5oxY4batGkjSXrsscdUoUIF1alTR4ULF1ZERMSdOFwAAAAAAG4LnmYFZCJ9FnGeZgUAuNvxNCsAAO4NN/M0K0bmAAAAAAAAWAhhDgAAAAAAgIUQ5gAAAAAAAFgIYQ4AAAAAAICFEOYAAAAAAABYCGEOAAAAAACAhRDmAAAAAAAAWAhhDgAAAAAAgIUQ5gAAAAAAAFgIYQ4AAAAAAICFEOYAAAAAAABYCGEOAAAAAACAhRDmAAAAAAAAWAhhDgAAAAAAgIUQ5gAAAAAAAFgIYQ4AAAAAAICFEOYAAAAAAABYCGEOAAAAAACAhRDmAAAAAAAAWAhhDgAAAAAAgIUQ5gAAAAAAAFgIYQ4AAAAAAICFEOYAAAAAAABYCGEOAAAAAACAhRDmAAAAAAAAWAhhDgAAAAAAgIUQ5gAAAAAAAFhIjoQ5qampioyM1D///JMTmwMAAAAAAEAWshXmjBgxQvPnz5d0Ochp2rSpatWqpYCAAIWHh+dkfQAAAAAAALhCtsKcL774QtWrV5ckffPNN4qNjdX+/fs1cuRIjR07NkcLBAAAAAAAwP9kK8z5+++/5efnJ0n6/vvv9cgjj6h8+fLq37+/9uzZk6MFAgAAAAAA4H+yFeYULVpU+/btU2pqqlauXKlWrVpJks6fPy9nZ+ccLRAAAAAAAAD/kyc7K/Xr109dunSRv7+/bDabgoODJUlbtmxRxYoVc7RAAAAAAAAA/E+2wpzx48frvvvu0+HDh/XII4/I1dVVkuTs7KznnnsuRwsEAAAAAADA/2QrzJGkzp07Z2jr06fPLRUDAAAAAACAa7vhMOfNN9+84Y0OHz48W8UAAAAAAADg2m44zJk5c+YN9bPZbIQ5AAAAAAAAt8kNhzmxsbG3sw7grvRgOT/5+PjkdhkAAAAAANhl69Hk6ZKTkxUdHa2UlJScqgcAAAAAAADXkK0w5/z58xowYIA8PDxUpUoVxcXFSZKefPJJTZkyJUcLBAAAAAAAwP9kK8x5/vnntWvXLoWHh8vNzc3eHhwcrCVLluRYcQAAAAAAAHCUrUeTL1u2TEuWLNH9998vm81mb69SpYpiYmJyrDgAAAAAAAA4ytbInL/++ktFihTJ0H7u3DmHcAcAAAAAAAA5K1thTp06dfTdd9/Z36cHOO+//74aNGiQM5UBAAAAAAAgg2zdZvXqq6+qTZs22rdvn1JSUjRr1izt27dPmzZt0vr163O6RgAAAAAAAPy/bI3MadSokSIjI5WSkqKqVavqhx9+UJEiRbR582bVrl07p2sEAAAAAADA/7MZY0xuFwHcbRISEpQvXz7Fx8fLx8cnt8sBAAAAANzjbub30Bu+zSohIeGGC+CXXwAAAAAAgNvjhsMcX1/fG35SVWpqarYLAgAAAAAAQNZuOMxZt26d/c+HDh3Sc889p759+9qfXrV582YtXLhQkydPzvkqAQAAAAAAICmbc+a0bNlSAwcOVPfu3R3aP/30U7377rsKDw/PqfqAXMGcOQAAAACAO+lmfg/N1tOsNm/erDp16mRor1OnjrZu3ZqdTQIAAAAAAOAGZCvMCQgI0HvvvZeh/f3331dAQMAtFwUAAAAAAIDM3fCcOVeaOXOmOnXqpBUrVqh+/fqSpK1bt+rAgQP68ssvc7RAAAAAAAAA/E+2Rua0bdtWBw4cUPv27XX69GmdPn1a7du312+//aa2bdvmdI0AAAAAAAD4f9maABm41zEBMgAAAADgTrqZ30OzdZuVJJ05c0bz589XVFSUJKlKlSrq37+/8uXLl91NAgAAAAAA4DqydZvV9u3bVaZMGc2cOdN+m9Xrr7+uMmXKaOfOnTldIwAAAAAAAP5ftm6zaty4scqWLav33ntPefJcHtyTkpKigQMH6vfff9eGDRtyvFDgTuI2KwAAAADAnXQzv4dmK8xxd3fXL7/8oooVKzq079u3T3Xq1NH58+dvdpPAXSX9S/TR9mh5eHnndjkAAAAAgGx4uIJ/bpdww24mzMnWbVY+Pj6Ki4vL0H748GF5e/OLLwAAAAAAwO2SrTCna9euGjBggJYsWaLDhw/r8OHDWrx4sQYOHKju3bvndI0AAAAAAAD4f9l6mtX06dNls9nUu3dvpaSkyBgjFxcXPfHEE5oyZUpO1wgAAAAAAID/l605c9KdP39eMTExkqQyZcrIw8MjxwoDchNz5gAAAACA9d2rc+bc1Mic/v3731C/Dz744GY2CwAAAAAAgBt0U2FOWFiYAgMDVbNmTd3CgB4AAAAAAABk002FOU888YQWLVqk2NhY9evXT7169VKBAgVuV20AAAAAAAC4yk09zertt9/WsWPH9Oyzz+qbb75RQECAunTpolWrVjFSBwAAAAAA4A646UeTu7q6qnv37lq9erX27dunKlWqaMiQIQoKClJiYuLtqBEAAAAAAAD/76bDHIeVnZxks9lkjFFqampO1QQAAAAAAIAs3HSYk5SUpEWLFqlVq1YqX7689uzZo9mzZysuLk5eXl63o0YAAAAAAAD8v5uaAHnIkCFavHixAgIC1L9/fy1atEiFChW6XbUBAAAAAADgKjZzEzMXOzk5qWTJkqpZs6ZsNluW/ZYuXZojxQG5JSEhQfny5dNH26Pl4eWd2+UAAAAAALLh4Qr+uV3CDUv/PTQ+Pl4+Pj7X7HtTI3N69+59zRAHAAAAAAAAt9dNhTlhYWG3qQwAAAAAAADciFt6mhUAAAAAAADuLMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwpybYLPZtGzZstwu419n/PjxqlGjRm6XAQAAAADAXYEw5wp9+/ZVx44ds1x+7NgxtWnT5s4VdJNsNpv95ePjo7p162r58uW5XdYtGz16tNauXZvbZQAAAAAAcFcgzLkJfn5+cnV1zdUajDFKSUnJcvmCBQt07Ngxbd++XQ0bNlTnzp21Z8+e21pTcnLybd2+l5eXChYseFv3AQAAAACAVRDm3IQrb7M6dOiQbDabli5dqubNm8vDw0PVq1fX5s2bHdbZuHGjGjduLHd3dwUEBGj48OE6d+6cfflHH32kOnXqyNvbW35+furRo4dOnjxpXx4eHi6bzaYVK1aodu3acnV11caNG7Os0dfXV35+fipfvrxeeeUVpaSkaN26dfblhw8fVpcuXeTr66sCBQqoQ4cOOnTokH15SkqKhg8fLl9fXxUsWFBjxoxRnz59HEYsNWvWTMOGDdOIESNUqFAhhYSESJL27t2rNm3ayMvLS0WLFtWjjz6qv//+277eF198oapVq8rd3V0FCxZUcHCw/VyEh4erXr168vT0lK+vrxo2bKg//vhDUsbbrNLS0vTyyy+rRIkScnV1VY0aNbRy5Ur78hv9bAAAAAAAsCLCnFs0duxYjR49WpGRkSpfvry6d+9uHzkTExOj0NBQderUSbt379aSJUu0ceNGDRs2zL7+pUuX9Morr2jXrl1atmyZDh06pL59+2bYz3PPPacpU6YoKipK1apVu25dKSkpmj9/viTJxcXFvq+QkBB5e3vrp59+UkREhLy8vBQaGmofXTN16lR98sknWrBggSIiIpSQkJDpPEELFy6Ui4uLIiIiNHfuXJ05c0YtWrRQzZo1tX37dq1cuVInTpxQly5dJF2+Ra179+7q37+/oqKiFB4erocfftg+0qhjx45q2rSpdu/erc2bN2vQoEGy2WyZHtusWbM0Y8YMTZ8+Xbt371ZISIgefPBBHThw4IY/m6slJSUpISHB4QUAAAAAwN3IZowxuV3E3aJv3746c+ZMlpMc22w2ffXVV+rYsaMOHTqkUqVK6f3339eAAQMkSfv27VOVKlUUFRWlihUrauDAgXJ2dta8efPs29i4caOaNm2qc+fOyc3NLcM+tm/frrp16+rs2bPy8vJSeHi4mjdvrmXLlqlDhw7XrN9ms8nNzU3Ozs66cOGC0tLSFBQUpB07dqhAgQL6+OOPNXHiREVFRdmDkuTkZPn6+mrZsmVq3bq1/Pz8NHr0aI0ePVqSlJqaqtKlS6tmzZr289KsWTMlJCRo586d9n1PnDhRP/30k1atWmVv+/PPPxUQEKDo6GglJiaqdu3aOnTokAIDAx3qPn36tAoWLKjw8HA1bdo0w3GNHz9ey5YtU2RkpCSpePHiGjp0qF544QV7n3r16qlu3bp6++23b+izyWwfEyZMyND+0fZoeXh5X/O8AwAAAADuTg9X8M/tEm5YQkKC8uXLp/j4ePn4+FyzLyNzbtGVo2T8/S9fJOm3Se3atUthYWHy8vKyv0JCQpSWlqbY2FhJ0o4dO9S+fXuVLFlS3t7e9jAjLi7OYT916tS5oXpmzpypyMhIrVixQpUrV9b777+vAgUK2Os5ePCgvL297fUUKFBAFy9eVExMjOLj43XixAnVq1fPvj1nZ2fVrl07w36ubtu1a5fWrVvncKzpoUlMTIyqV6+uli1bqmrVqnrkkUf03nvv6Z9//pEkFShQQH379lVISIjat2+vWbNm6dixY5keX0JCgo4ePaqGDRs6tDds2FBRUVEObdf6bK72/PPPKz4+3v46fPhwpv0AAAAAAMhteXK7AKvLmzev/c/po13S0tIkSYmJiRo8eLCGDx+eYb2SJUvq3LlzCgkJUUhIiD755BMVLlxYcXFxCgkJyTCpsKen5w3V4+fnp7Jly6ps2bJasGCB2rZtq3379qlIkSL20TGffPJJhvUKFy58w8ecWT2JiYlq3769pk6dmqGvv7+/nJ2dtXr1am3atEk//PCD3nrrLY0dO1ZbtmxRqVKltGDBAg0fPlwrV67UkiVL9OKLL2r16tW6//77b6quK13rs7maq6trrk9uDQAAAADAjWBkzm1Uq1Yt7du3zx6uXPlycXHR/v37derUKU2ZMkWNGzdWxYoVsxw5kh316tVT7dq1NWnSJHs9Bw4cUJEiRTLUky9fPuXLl09FixbVtm3b7NtITU11uJ3qWsf666+/KigoKMO204Mfm82mhg0basKECfrll1/k4uKir776yr6NmjVr6vnnn9emTZt033336dNPP82wHx8fHxUrVkwREREO7REREapcuXK2zhMAAAAAAFZCmHOV+Ph4RUZGOryye8vNmDFjtGnTJg0bNkyRkZE6cOCAli9fbp8AuWTJknJxcdFbb72l33//XV9//bVeeeWVnDwcjRgxQvPmzdORI0fUs2dPFSpUSB06dNBPP/2k2NhYhYeHa/jw4frzzz8lSU8++aQmT56s5cuXKzo6Wk899ZT++eefLCcjTjd06FCdPn1a3bt317Zt2xQTE6NVq1apX79+Sk1N1ZYtW/Tqq69q+/btiouL09KlS/XXX3+pUqVKio2N1fPPP6/Nmzfrjz/+0A8//KADBw6oUqVKme7rmWee0dSpU7VkyRJFR0frueeeU2RkpJ566qkcPXcAAAAAANyNuM3qKuHh4apZs6ZD24ABA/T+++/f9LaqVaum9evXa+zYsWrcuLGMMSpTpoy6du0q6fKtTWFhYXrhhRf05ptvqlatWpo+fboefPDBHDkWSQoNDVWpUqU0adIkvfPOO9qwYYPGjBmjhx9+WGfPnlXx4sXVsmVL++RKY8aM0fHjx9W7d285Oztr0KBBCgkJkbOz8zX3kz5aZsyYMWrdurWSkpIUGBio0NBQOTk5ycfHRxs2bNAbb7yhhIQEBQYGasaMGWrTpo1OnDih/fv3a+HChTp16pT8/f01dOhQDR48ONN9DR8+XPHx8Ro1apROnjypypUr6+uvv1a5cuVy7LwBAAAAAHC34mlWuKa0tDRVqlRJXbp0yfFRQ3ez9FnEeZoVAAAAAFjXvfo0K0bmwEH6bU5NmzZVUlKSZs+erdjYWPXo0SO3SwMAAAAAAGLOHFzFyclJYWFhqlu3rho2bKg9e/ZozZo1Wc5fAwAAAAAA7ixG5sBBQEBAhidFAQAAAACAuwcjcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQghzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQghzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQghzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQghzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQghzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQvLkdgHA3ezBcn7y8fHJ7TIAAAAAALBjZA4AAAAAAICFEOYAAAAAAABYCGEOAAAAAACAhRDmAAAAAAAAWAhhDgAAAAAAgIUQ5gAAAAAAAFgIYQ4AAAAAAICFEOYAAAAAAABYCGEOAAAAAACAhRDmAAAAAAAAWAhhDgAAAAAAgIUQ5gAAAAAAAFgIYQ4AAAAAAICFEOYAAAAAAABYCGEOAAAAAACAhRDmAAAAAAAAWAhhDgAAAAAAgIUQ5gAAAAAAAFgIYQ4AAAAAAICFEOYAAAAAAABYCGEOAAAAAACAheTJ7QKAu9nXB47Lw+tcbpcBAAD+5R6u4J/bJQAA7iKMzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwkH9VmBMUFKQ33njjhvsfOnRINptNkZGRWfYJCwuTr6/vLdeGrN3I5wAAAAAAwL9FroY5ffv2VceOHR3avvjiC7m5uWnGjBn2PjabTVOmTHHot2zZMtlstpva37Zt2zRo0KBbqvluln6ubDab8ubNq1KlSunZZ5/VxYsXc7u0WxIQEKBjx47pvvvuy+1SAAAAAADIdXfVyJz3339fPXv21Jw5czRq1Ch7u5ubm6ZOnap//vnnlrZfuHBheXh43GqZd8SlS5eytV5oaKiOHTum33//XTNnztS8efM0bty4HK7OUWpqqtLS0m7b9p2dneXn56c8efLctn0AAAAAAGAVd02YM23aND355JNavHix+vXr57AsODhYfn5+mjx58jW3sXHjRjVu3Fju7u4KCAjQ8OHDde7cOfvyq2+z2r9/vxo1aiQ3NzdVrlxZa9askc1m07Jlyxy2+/vvv6t58+by8PBQ9erVtXnz5gz7XrZsmcqVKyc3NzeFhITo8OHDDsvnzJmjMmXKyMXFRRUqVNBHH33ksNxms2nOnDl68MEH5enpqUmTJumff/5Rz549VbhwYbm7u6tcuXJasGDBNc+Bq6ur/Pz8FBAQoI4dOyo4OFirV6+2L09LS9PkyZNVqlQpubu7q3r16vriiy8ctvH111/bj6V58+ZauHChbDabzpw5I+l/t5Z9/fXXqly5slxdXRUXF6ekpCSNHj1axYsXl6enp+rXr6/w8HD7dv/44w+1b99e+fPnl6enp6pUqaLvv/9ekq55rJndZrV+/XrVq1dPrq6u8vf313PPPaeUlBT78mbNmmn48OF69tlnVaBAAfn5+Wn8+PHXPHcAAAAAAFjBXRHmjBkzRq+88oq+/fZbPfTQQxmWOzs769VXX9Vbb72lP//8M9NtxMTEKDQ0VJ06ddLu3bu1ZMkSbdy4UcOGDcu0f2pqqjp27CgPDw9t2bJF7777rsaOHZtp37Fjx2r06NGKjIxU+fLl1b17d4fg4Pz585o0aZI+/PBDRURE6MyZM+rWrZt9+VdffaWnnnpKo0aN0t69ezV48GD169dP69atc9jP+PHj9dBDD2nPnj3q37+//vvf/2rfvn1asWKFoqKiNGfOHBUqVOi65zPd3r17tWnTJrm4uNjbJk+erA8//FBz587Vr7/+qpEjR6pXr15av369JCk2NladO3dWx44dtWvXLg0ePDjT83L+/HlNnTpV77//vn799VcVKVJEw4YN0+bNm7V48WLt3r1bjzzyiEJDQ3XgwAFJ0tChQ5WUlKQNGzZoz549mjp1qry8vCTppo71yJEjatu2rerWratdu3Zpzpw5mj9/viZOnOjQb+HChfL09NSWLVs0bdo0vfzyyw7B1pWSkpKUkJDg8AIAAAAA4G6U6/etrFixQsuXL9fatWvVokWLLPs99NBDqlGjhsaNG6f58+dnWD558mT17NlTI0aMkCSVK1dOb775ppo2bao5c+bIzc3Nof/q1asVExOj8PBw+fn5SZImTZqkVq1aZdj26NGj1a5dO0nShAkTVKVKFR08eFAVK1aUdPmWqNmzZ6t+/fqSLocIlSpV0tatW1WvXj1Nnz5dffv21ZAhQyRJTz/9tH7++WdNnz5dzZs3t++nR48eDqOS4uLiVLNmTdWpU0fS5ZFF1/Ptt9/Ky8tLKSkpSkpKkpOTk2bPni3pcmDx6quvas2aNWrQoIEkqXTp0tq4caPmzZunpk2bat68eapQoYJee+01SVKFChW0d+9eTZo0yWE/ly5d0jvvvKPq1avba12wYIHi4uJUrFgx+3lbuXKlFixYoFdffVVxcXHq1KmTqlatat93do71nXfeUUBAgGbPni2bzaaKFSvq6NGjGjNmjF566SU5OV3OKKtVq2a/xaxcuXKaPXu21q5dm+lnPHnyZE2YMOG65xcAAAAAgNyW6yNzqlWrpqCgII0bN06JiYnX7Dt16lQtXLhQUVFRGZbt2rVLYWFh8vLysr9CQkKUlpam2NjYDP2jo6MVEBBgD3IkqV69elnWmM7f31+SdPLkSXtbnjx5VLduXfv7ihUrytfX115nVFSUGjZs6LDNhg0bZjiO9CAj3RNPPKHFixerRo0aevbZZ7Vp06ZM67tS8+bNFRkZqS1btqhPnz7q16+fOnXqJEk6ePCgzp8/r1atWjmcpw8//FAxMTH283LlsWR1XlxcXBzOy549e5Samqry5cs7bHv9+vX2bQ8fPlwTJ05Uw4YNNW7cOO3evTtbxxoVFaUGDRo4TIDdsGFDJSYmOozcurI+6fJnd+XndqXnn39e8fHx9tfVt8kBAAAAAHC3yPUwp3jx4goPD9eRI0cUGhqqs2fPZtm3SZMmCgkJ0fPPP59hWWJiogYPHqzIyEj7a9euXTpw4IDKlClzSzXmzZvX/uf0AOF2TPjr6enp8L5Nmzb6448/NHLkSB09elQtW7bU6NGjr7uNsmXLqnr16vrggw+0ZcsW+0im9LDsu+++czhP+/btyzBvzvW4u7s7hCmJiYlydnbWjh07HLYdFRWlWbNmSZIGDhyo33//XY8++qj27NmjOnXq6K233sr2sV7PlZ+bdPmzy+pzc3V1lY+Pj8MLAAAAAIC7Ua6HOZIUGBio9evX6/jx49cNdKZMmaJvvvkmwyTEtWrV0r59+1S2bNkMryvnjElXoUIFHT58WCdOnLC3bdu2LVv1p6SkaPv27fb30dHROnPmjCpVqiRJqlSpkiIiIhzWiYiIUOXKla+77cKFC6tPnz76+OOP9cYbb+jdd9+94bqcnJz0wgsv6MUXX9SFCxccJiu++hwFBARIunxerjwW6cbOS82aNZWamqqTJ09m2PaVo58CAgL0+OOPa+nSpRo1apTee++9mz7WSpUqafPmzTLG2NsiIiLk7e2tEiVK3PD5AQAAAADAiu6KMEe6/Et+eHi4Tp48qZCQkCwnoK1atap69uypN99806F9zJgx2rRpk4YNG6bIyEgdOHBAy5cvz3IC5FatWqlMmTLq06ePdu/erYiICL344ouS5DDi5EbkzZtXTz75pLZs2aIdO3aob9++uv/+++23Jz3zzDMKCwvTnDlzdODAAb3++utaunTpdUeevPTSS1q+fLkOHjyoX3/9Vd9++609ILpRjzzyiJydnfX222/L29tbo0eP1siRI7Vw4ULFxMRo586deuutt7Rw4UJJ0uDBg7V//36NGTNGv/32mz777DOFhYVd97yUL19ePXv2VO/evbV06VLFxsZq69atmjx5sr777jtJ0ogRI7Rq1SrFxsZq586dWrdunf14buZYhwwZosOHD+vJJ5/U/v37tXz5co0bN05PP/20fb4cAAAAAADuVXfVb74lSpRQeHi4/v7772sGOi+//HKG22WqVaum9evX67ffflPjxo1Vs2ZNvfTSS/bJeK/m7OysZcuWKTExUXXr1tXAgQPtT226erLk6/Hw8NCYMWPUo0cPNWzYUF5eXlqyZIl9eceOHTVr1ixNnz5dVapU0bx587RgwQI1a9bsmtt1cXHR888/r2rVqqlJkyZydnbW4sWLb6q2PHnyaNiwYZo2bZrOnTunV155Rf/97381efJkVapUSaGhofruu+9UqlQpSVKpUqX0xRdfaOnSpapWrZrmzJljPy+urq7X3NeCBQvUu3dvjRo1ShUqVFDHjh21bds2lSxZUtLlJ4gNHTrUvt/y5cvrnXfeueljLV68uL7//ntt3bpV1atX1+OPP64BAwbYwzgAAAAAAO5lNnPlvSr/chEREWrUqJEOHjx4y/Ps3EsmTZqkuXPn/qsmBU5ISFC+fPn00fZoeXh553Y5AADgX+7hCv65XQIA4DZL/z00Pj7+uvO45vqjyXPTV199JS8vL5UrV04HDx7UU089pYYNG/7rg5x33nlHdevWVcGCBRUREaHXXnsty9vVAAAAAADAnfWvDnPOnj2rMWPGKC4uToUKFVJwcLBmzJiR22XlugMHDmjixIk6ffq0SpYsqVGjRmX6BDEAAAAAAHDncZsVkAluswIAAHcTbrMCgHvfzdxmdVdNgAwAAAAAAIBrI8wBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsBDCHAAAAAAAAAshzAEAAAAAALAQwhwAAAAAAAALIcwBAAAAAACwEMIcAAAAAAAACyHMAQAAAAAAsJA8uV0AcDd7sJyffHx8crsMAAAAAADsGJkDAAAAAABgIYQ5AAAAAAAAFkKYAwAAAAAAYCGEOQAAAAAAABZCmAMAAAAAAGAhhDkAAAAAAAAWQpgDAAAAAABgIYQ5AAAAAAAAFkKYAwAAAAAAYCGEOQAAAAAAABZCmAMAAAAAAGAhhDkAAAAAAAAWQpgDAAAAAABgIYQ5AAAAAAAAFkKYAwAAAAAAYCGEOQAAAAAAABZCmAMAAAAAAGAhhDkAAAAAAAAWQpgDAAAAAABgIXlyuwDgbmSMkSQlJCTkciUAAAAAgH+D9N8/038fvRbCHCATp06dkiQFBATkciUAAAAAgH+Ts2fPKl++fNfsQ5gDZKJAgQKSpLi4uOt+iYC7VUJCggICAnT48GH5+PjkdjlAtnEt417AdYx7Adcx7gV383VsjNHZs2dVrFix6/YlzAEy4eR0eTqpfPny3XVfcOBm+fj4cB3jnsC1jHsB1zHuBVzHuBfcrdfxjQ4mYAJkAAAAAAAACyHMAQAAAAAAsBDCHCATrq6uGjdunFxdXXO7FCDbuI5xr+Baxr2A6xj3Aq5j3AvulevYZm7kmVcAAAAAAAC4KzAyBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHyMTbb7+toKAgubm5qX79+tq6dWtulwRIksaPHy+bzebwqlixon35xYsXNXToUBUsWFBeXl7q1KmTTpw44bCNuLg4tWvXTh4eHipSpIieeeYZpaSk3OlDwb/Mhg0b1L59exUrVkw2m03Lli1zWG6M0UsvvSR/f3+5u7srODhYBw4ccOhz+vRp9ezZUz4+PvL19dWAAQOUmJjo0Gf37t1q3Lix3NzcFBAQoGnTpt3uQ8O/yPWu4759+2b4Ozo0NNShD9cxctPkyZNVt25deXt7q0iRIurYsaOio6Md+uTUzxLh4eGqVauWXF1dVbZsWYWFhd3uw8O/yI1cy82aNcvwd/Ljjz/u0MfK1zJhDnCVJUuW6Omnn9a4ceO0c+dOVa9eXSEhITp58mRulwZIkqpUqaJjx47ZXxs3brQvGzlypL755ht9/vnnWr9+vY4ePaqHH37Yvjw1NVXt2rVTcnKyNm3apIULFyosLEwvvfRSbhwK/kXOnTun6tWr6+233850+bRp0/Tmm29q7ty52rJlizw9PRUSEqKLFy/a+/Ts2VO//vqrVq9erW+//VYbNmzQoEGD7MsTEhLUunVrBQYGaseOHXrttdc0fvx4vfvuu7f9+PDvcL3rWJJCQ0Md/o5etGiRw3KuY+Sm9evXa+jQofr555+1evVqXbp0Sa1bt9a5c+fsfXLiZ4nY2Fi1a9dOzZs3V2RkpEaMGKGBAwdq1apVd/R4ce+6kWtZkh577DGHv5OvDMctfy0bAA7q1atnhg4dan+fmppqihUrZiZPnpyLVQGXjRs3zlSvXj3TZWfOnDF58+Y1n3/+ub0tKirKSDKbN282xhjz/fffGycnJ3P8+HF7nzlz5hgfHx+TlJR0W2sH0kkyX331lf19Wlqa8fPzM6+99pq97cyZM8bV1dUsWrTIGGPMvn37jCSzbds2e58VK1YYm81mjhw5Yowx5p133jH58+d3uJbHjBljKlSocJuPCP9GV1/HxhjTp08f06FDhyzX4TrG3ebkyZNGklm/fr0xJud+lnj22WdNlSpVHPbVtWtXExIScrsPCf9SV1/LxhjTtGlT89RTT2W5jtWvZUbmAFdITk7Wjh07FBwcbG9zcnJScHCwNm/enIuVAf9z4MABFStWTKVLl1bPnj0VFxcnSdqxY4cuXbrkcP1WrFhRJUuWtF+/mzdvVtWqVVW0aFF7n5CQECUkJOjXX3+9swcC/L/Y2FgdP37c4drNly+f6tev73Dt+vr6qk6dOvY+wcHBcnJy0pYtW+x9mjRpIhcXF3ufkJAQRUdH659//rlDR4N/u/DwcBUpUkQVKlTQE088oVOnTtmXcR3jbhMfHy9JKlCggKSc+1li8+bNDttI78PP07hdrr6W033yyScqVKiQ7rvvPj3//PM6f/68fZnVr+U8uV0AcDf5+++/lZqa6vCFlqSiRYtq//79uVQV8D/169dXWFiYKlSooGPHjmnChAlq3Lix9u7dq+PHj8vFxUW+vr4O6xQtWlTHjx+XJB0/fjzT6zt9GZAb0q+9zK7NK6/dIkWKOCzPkyePChQo4NCnVKlSGbaRvix//vy3pX4gXWhoqB5++GGVKlVKMTExeuGFF9SmTRtt3rxZzs7OXMe4q6SlpWnEiBFq2LCh7rvvPknKsZ8lsuqTkJCgCxcuyN3d/XYcEv6lMruWJalHjx4KDAxUsWLFtHv3bo0ZM0bR0dFaunSpJOtfy4Q5AGAhbdq0sf+5WrVqql+/vgIDA/XZZ5/xgxEA5LJu3brZ/1y1alVVq1ZNZcqUUXh4uFq2bJmLlQEZDR06VHv37nWYew+woqyu5SvnI6tatar8/f3VsmVLxcTEqEyZMne6zBzHbVbAFQoVKiRnZ+cMM/afOHFCfn5+uVQVkDVfX1+VL19eBw8elJ+fn5KTk3XmzBmHPldev35+fple3+nLgNyQfu1d6+9ePz+/DBPRp6Sk6PTp01zfuGuVLl1ahQoV0sGDByVxHePuMWzYMH377bdat26dSpQoYW/PqZ8lsurj4+PDPz4hR2V1LWemfv36kuTwd7KVr2XCHOAKLi4uql27ttauXWtvS0tL09q1a9WgQYNcrAzIXGJiomJiYuTv76/atWsrb968DtdvdHS04uLi7NdvgwYNtGfPHodfJlavXi0fHx9Vrlz5jtcPSFKpUqXk5+fncO0mJCRoy5YtDtfumTNntGPHDnufH3/8UWlpafYfzho0aKANGzbo0qVL9j6rV69WhQoVuDUFueLPP//UqVOn5O/vL4nrGLnPGKNhw4bpq6++0o8//pjhlr6c+lmiQYMGDttI78PP08gp17uWMxMZGSlJDn8nW/pazu0ZmIG7zeLFi42rq6sJCwsz+/btM4MGDTK+vr4Os5wDuWXUqFEmPDzcxMbGmoiICBMcHGwKFSpkTp48aYwx5vHHHzclS5Y0P/74o9m+fbtp0KCBadCggX39lJQUc99995nWrVubyMhIs3LlSlO4cGHz/PPP59Yh4V/i7Nmz5pdffjG//PKLkWRef/1188svv5g//vjDGGPMlClTjK+vr1m+fLnZvXu36dChgylVqpS5cOGCfRuhoaGmZs2aZsuWLWbjxo2mXLlypnv37vblZ86cMUWLFjWPPvqo2bt3r1m8eLHx8PAw8+bNu+PHi3vTta7js2fPmtGjR5vNmzeb2NhYs2bNGlOrVi1Trlw5c/HiRfs2uI6Rm5544gmTL18+Ex4ebo4dO2Z/nT9/3t4nJ36W+P33342Hh4d55plnTFRUlHn77beNs7OzWbly5R09Xty7rnctHzx40Lz88stm+/btJjY21ixfvtyULl3aNGnSxL4Nq1/LhDlAJt566y1TsmRJ4+LiYurVq2d+/vnn3C4JMMZcfhSiv7+/cXFxMcWLFzddu3Y1Bw8etC+/cOGCGTJkiMmfP7/x8PAwDz30kDl27JjDNg4dOmTatGlj3N3dTaFChcyoUaPMpUuX7vSh4F9m3bp1RlKGV58+fYwxlx9P/t///tcULVrUuLq6mpYtW5ro6GiHbZw6dcp0797deHl5GR8fH9OvXz9z9uxZhz67du0yjRo1Mq6urqZ48eJmypQpd+oQ8S9wrev4/PnzpnXr1qZw4cImb968JjAw0Dz22GMZ/jGI6xi5KbPrV5JZsGCBvU9O/Syxbt06U6NGDePi4mJKly7tsA/gVl3vWo6LizNNmjQxBQoUMK6urqZs2bLmmWeeMfHx8Q7bsfK1bDPGmDs3DggAAAAAAAC3gjlzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQghzAAAAAAAALIQwBwAAAAAAwEIIcwAAACBJstlsWrZs2W3b/vjx41WjRo3btn0AAP4tCHMAAACyqW/fvrLZbHr88cczLBs6dKhsNpv69u175wvLwoULF1SgQAEVKlRISUlJuV3ODQkKCtIbb7xxy9sJCwuTzWbL8HJzc7v1IgEAuMMIcwAAAG5BQECAFi9erAsXLtjbLl68qE8//VQlS5bMxcoy+vLLL1WlShVVrFjxto7AuVv5+Pjo2LFjDq8//vgjy/7JyckZ2owxSklJuel9Z3c9AAAyQ5gDAABwC2rVqqWAgAAtXbrU3rZ06VKVLFlSNWvWdOiblpamyZMnq1SpUnJ3d1f16tX1xRdf2JenpqZqwIAB9uUVKlTQrFmzHLbRt29fdezYUdOnT5e/v78KFiyooUOH6tKlS9etdf78+erVq5d69eql+fPnZ9rn2LFjatOmjdzd3VW6dGmH+pKTkzVs2DD5+/vLzc1NgYGBmjx5sn15XFycOnToIC8vL/n4+KhLly46ceJElvU0a9ZMI0aMcGjr2LGjfTRTs2bN9Mcff2jkyJH2kTTpNm7cqMaNG8vd3V0BAQEaPny4zp07d83jt9ls8vPzc3gVLVrUoZ5hw4ZpxIgRKlSokEJCQhQeHi6bzaYVK1aodu3acnV11caNG5WUlKThw4erSJEicnNzU6NGjbRt2zb7trJaDwCAnECYAwAAcIv69++vBQsW2N9/8MEH6tevX4Z+kydP1ocffqi5c+fq119/1ciRI9WrVy+tX79e0uWwp0SJEvr888+1b98+vfTSS3rhhRf02WefOWxn3bp1iomJ0bp167Rw4UKFhYUpLCzsmjXGxMRo8+bN6tKli7p06aKffvop01Ep//3vf9WpUyft2rVLPXv2VLdu3RQVFSVJevPNN/X111/rs88+U3R0tD755BMFBQXZa+/QoYNOnz6t9evXa/Xq1fr999/VtWvXmzmVDpYuXaoSJUro5Zdfto+kST+W0NBQderUSbt379aSJUu0ceNGDRs2LNv7Srdw4UK5uLgoIiJCc+fOtbc/99xzmjJliqKiolStWjU9++yz+vLLL7Vw4ULt3LlTZcuWVUhIiE6fPu2wvavXAwAgRxgAAABkS58+fUyHDh3MyZMnjaurqzl06JA5dOiQcXNzM3/99Zfp0KGD6dOnjzHGmIsXLxoPDw+zadMmh20MGDDAdO/ePct9DB061HTq1Mlhn4GBgSYlJcXe9sgjj5iuXbtes9YXXnjBdOzY0f6+Q4cOZty4cQ59JJnHH3/coa1+/frmiSeeMMYY8+STT5oWLVqYtLS0DNv/4YcfjLOzs4mLi7O3/frrr0aS2bp1qzHGmHHjxpnq1avblzdt2tQ89dRTDtu58pwZY0xgYKCZOXOmQ58BAwaYQYMGObT99NNPxsnJyVy4cCHT41+wYIGRZDw9PR1eoaGhDvXUrFnTYb1169YZSWbZsmX2tsTERJM3b17zySef2NuSk5NNsWLFzLRp07JcDwCAnJInV5MkAACAe0DhwoXVrl07hYWFyRijdu3aqVChQg59Dh48qPPnz6tVq1YO7cnJyQ63Y7399tv64IMPFBcXpwsXLig5OTnDE6CqVKkiZ2dn+3t/f3/t2bMny/pSU1O1cOFCh1u2evXqpdGjR+ull16Sk9P/Bms3aNDAYd0GDRooMjJS0uVbvFq1aqUKFSooNDRUDzzwgFq3bi1JioqKUkBAgAICAuzrVq5cWb6+voqKilLdunWzrO9m7dq1S7t379Ynn3xibzPGKC0tTbGxsapUqVKm63l7e2vnzp0Obe7u7g7va9eunem6derUsf85JiZGly5dUsOGDe1tefPmVb169eyjmDJbDwCAnEKYAwAAkAP69+9vv83n7bffzrA8MTFRkvTdd9+pePHiDstcXV0lSYsXL9bo0aM1Y8YMNWjQQN7e3nrttde0ZcsWh/558+Z1eG+z2ZSWlpZlbatWrdKRI0cy3PKUmpqqtWvXZgiYslKrVi3FxsZqxYoVWrNmjbp06aLg4GCHeXVuhpOTk4wxDm03MvdPYmKiBg8erOHDh2dYdq1Jp52cnFS2bNlrbtvT0/Om2q8nu+sBAHAthDkAAAA5IDQ0VMnJybLZbAoJCcmwvHLlynJ1dVVcXJyaNm2a6TYiIiL0n//8R0OGDLG3xcTE3HJt8+fPV7du3TR27FiH9kmTJmn+/PkOYc7PP/+s3r17O7y/cuSQj4+Punbtqq5du6pz584KDQ3V6dOnValSJR0+fFiHDx+2j87Zt2+fzpw5o8qVK2daV+HChe3z4EiXw6W9e/eqefPm9jYXFxelpqY6rFerVi3t27fvusHM7VKmTBn7vDqBgYGSLodQ27ZtyzChMwAAtwNhDgAAQA5wdna232Jz5S1Q6by9vTV69GiNHDlSaWlpatSokeLj4xURESEfHx/16dNH5cqV04cffqhVq1apVKlS+uijj7Rt2zaVKlUq23X99ddf+uabb/T111/rvvvuc1jWu3dvPfTQQzp9+rQKFCggSfr8889Vp04dNWrUSJ988om2bt1qf/LV66+/Ln9/f9WsWVNOTk76/PPP5efnJ19fXwUHB6tq1arq2bOn3njjDaWkpGjIkCFq2rRplrcatWjRQk8//bS+++47lSlTRq+//rrOnDnj0CcoKEgbNmxQt27d5OrqqkKFCmnMmDG6//77NWzYMA0cOFCenp7at2+fVq9erdmzZ2d5LowxOn78eIb2IkWKONxqdj2enp564okn9Mwzz6hAgQIqWbKkpk2bpvPnz2vAgAE3vB0AALKLMAcAACCH+Pj4XHP5K6+8osKFC2vy5Mn6/fff5evrq1q1aumFF16QJA0ePFi//PKLunbtKpvNpu7du2vIkCFasWJFtmv68MMP5enpqZYtW2ZY1rJlS7m7u+vjjz+237I0YcIELV68WEOGDJG/v78WLVpkH1nj7e2tadOm6cCBA3J2dlbdunX1/fff24OQ5cuX68knn1STJk3k5OSk0NBQvfXWW1nW1r9/f+3atUu9e/dWnjx5NHLkSIdROZL08ssva/DgwSpTpoySkpJkjFG1atW0fv16jR07Vo0bN5YxRmXKlLnuk7MSEhLk7++fof3YsWPy8/O79om8ypQpU5SWlqZHH31UZ8+eVZ06dbRq1Srlz5//prYDAEB22MzVNyoDAAAAAADgrnXj40kBAAAAAACQ6whzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBCCHMAAAAAAAAshDAHAAAAAADAQghzAAAAAAAALIQwBwAAAAAAwEIIcwAAAAAAACyEMAcAAAAAAMBC/g9IzOpDXYSYHwAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Hyper Parameter Tuning**"
      ],
      "metadata": {
        "id": "n7iNt0eHMLe4"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 231,
      "metadata": {
        "id": "YULwBonKg_L5"
      },
      "outputs": [],
      "source": [
        "random_search = {\n",
        "    'n_estimators' : [100, 120, 150, 180, 200,220,280,350],\n",
        "    'max_features':['auto','sqrt'],\n",
        "    'max_depth':[5,10,15,20,25,30,35],\n",
        "    'min_samples_split':[2,3,10,15,100],\n",
        "    'min_samples_leaf':[1,2,5,10] }"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 232,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 134
        },
        "id": "Tv12vJwYmhUk",
        "outputId": "77878626-8686-4bc8-aef6-efdcf0d8e183"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 3 folds for each of 10 candidates, totalling 30 fits\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomizedSearchCV(cv=3, estimator=RandomForestRegressor(), n_jobs=-1,\n",
              "                   param_distributions={'max_depth': [5, 10, 15, 20, 25, 30,\n",
              "                                                      35],\n",
              "                                        'max_features': ['auto', 'sqrt'],\n",
              "                                        'min_samples_leaf': [1, 2, 5, 10],\n",
              "                                        'min_samples_split': [2, 3, 10, 15,\n",
              "                                                              100],\n",
              "                                        'n_estimators': [100, 120, 150, 180,\n",
              "                                                         200, 220, 280, 350]},\n",
              "                   random_state=42, verbose=2)"
            ],
            "text/html": [
              "<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomizedSearchCV(cv=3, estimator=RandomForestRegressor(), n_jobs=-1,\n",
              "                   param_distributions={&#x27;max_depth&#x27;: [5, 10, 15, 20, 25, 30,\n",
              "                                                      35],\n",
              "                                        &#x27;max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;],\n",
              "                                        &#x27;min_samples_leaf&#x27;: [1, 2, 5, 10],\n",
              "                                        &#x27;min_samples_split&#x27;: [2, 3, 10, 15,\n",
              "                                                              100],\n",
              "                                        &#x27;n_estimators&#x27;: [100, 120, 150, 180,\n",
              "                                                         200, 220, 280, 350]},\n",
              "                   random_state=42, verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomizedSearchCV</label><div class=\"sk-toggleable__content\"><pre>RandomizedSearchCV(cv=3, estimator=RandomForestRegressor(), n_jobs=-1,\n",
              "                   param_distributions={&#x27;max_depth&#x27;: [5, 10, 15, 20, 25, 30,\n",
              "                                                      35],\n",
              "                                        &#x27;max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;],\n",
              "                                        &#x27;min_samples_leaf&#x27;: [1, 2, 5, 10],\n",
              "                                        &#x27;min_samples_split&#x27;: [2, 3, 10, 15,\n",
              "                                                              100],\n",
              "                                        &#x27;n_estimators&#x27;: [100, 120, 150, 180,\n",
              "                                                         200, 220, 280, 350]},\n",
              "                   random_state=42, verbose=2)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 232
        }
      ],
      "source": [
        "rf=RandomForestRegressor()\n",
        "rf_random=RandomizedSearchCV(estimator=rf,param_distributions=random_search,cv=3,verbose=2,n_jobs=-1,random_state=42)\n",
        "\n",
        "rf_random.fit(X_train,y_train)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 233,
      "metadata": {
        "id": "YbwaPkjcm6nh",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7f53505d-cf28-494f-813c-5ca06e411a89"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'n_estimators': 150,\n",
              " 'min_samples_split': 3,\n",
              " 'min_samples_leaf': 1,\n",
              " 'max_features': 'sqrt',\n",
              " 'max_depth': 20}"
            ]
          },
          "metadata": {},
          "execution_count": 233
        }
      ],
      "source": [
        "rf_random.best_params_"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#predicting the values\n",
        "prediction = rf_random.predict(X_test)\n",
        "\n",
        "# Scatter plot to visualize the relationship between actual and predicted values\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.scatterplot(x=y_test, y=prediction)\n",
        "plt.title(\"Actual vs. Predicted Values\")\n",
        "plt.xlabel(\"Actual Values\")\n",
        "plt.ylabel(\"Predicted Values\")\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "ie3eMaMnxfNX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "outputId": "e7b93295-698b-4ad1-f3c4-da6c78a2f82b"
      },
      "execution_count": 234,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**After Hyper Parameter Tuning ,Accuracy increase**"
      ],
      "metadata": {
        "id": "QKM4_csaO593"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "r2_score(y_test,prediction)"
      ],
      "metadata": {
        "id": "SYEyIOu6xkQA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a8f9abe5-51da-4961-eada-feb6dcb2e5ce"
      },
      "execution_count": 235,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8105541953203015"
            ]
          },
          "metadata": {},
          "execution_count": 235
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install streamlit -q"
      ],
      "metadata": {
        "id": "9rlYl1pitbPG"
      },
      "execution_count": 236,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install pyngrok\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DHxiUn5l5PL-",
        "outputId": "9d999f0e-aa55-4267-ed6d-e19c4659d0f6"
      },
      "execution_count": 237,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pyngrok in /usr/local/lib/python3.10/dist-packages (7.0.0)\n",
            "Requirement already satisfied: PyYAML in /usr/local/lib/python3.10/dist-packages (from pyngrok) (6.0.1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!wget -q -0 - - ipv4.icanhazip.com"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DWQMHO675bYM",
        "outputId": "50b9085b-7a0a-4207-db06-f48293e05c80"
      },
      "execution_count": 238,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "wget: invalid option -- '0'\n",
            "Usage: wget [OPTION]... [URL]...\n",
            "\n",
            "Try `wget --help' for more options.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!streamlit run streamlit_app.py & npx localtunnel --port 8501"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PD3AkF2D6BEZ",
        "outputId": "335e6bd9-0fce-4828-d0e2-a147966005b8"
      },
      "execution_count": 196,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Usage: streamlit run [OPTIONS] TARGET [ARGS]...\n",
            "Try 'streamlit run --help' for help.\n",
            "\n",
            "Error: Invalid value: File does not exist: app.py\n",
            "\u001b[K\u001b[?25hnpx: installed 22 in 4.143s\n",
            "your url is: https://funny-years-nail.loca.lt\n",
            "/root/.npm/_npx/18668/lib/node_modules/localtunnel/bin/lt.js:81\n",
            "    throw err;\n",
            "    ^\n",
            "\n",
            "Error: connection refused: localtunnel.me:46185 (check your firewall settings)\n",
            "    at Socket.<anonymous> (/root/.npm/_npx/18668/lib/node_modules/\u001b[4mlocaltunnel\u001b[24m/lib/TunnelCluster.js:52:11)\n",
            "\u001b[90m    at Socket.emit (events.js:315:20)\u001b[39m\n",
            "\u001b[90m    at emitErrorNT (internal/streams/destroy.js:106:8)\u001b[39m\n",
            "\u001b[90m    at emitErrorCloseNT (internal/streams/destroy.js:74:3)\u001b[39m\n",
            "\u001b[90m    at processTicksAndRejections (internal/process/task_queues.js:80:21)\u001b[39m\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1MyHe8f2GVI9rl3wlfgIn1JymrJc03HRE",
      "authorship_tag": "ABX9TyNfPH6ATU+SvafDznt2ZqfZ",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}